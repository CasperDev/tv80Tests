$date
	Sat Oct 25 18:22:06 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_fdcb94 $end
$var wire 1 ! cpu_clk $end
$var wire 1 " cpu_reset $end
$var wire 16 # io_a [15:0] $end
$var wire 1 $ cpu_wr_n $end
$var wire 1 % cpu_rfsh_n $end
$var wire 1 & cpu_rd_n $end
$var wire 1 ' cpu_mreq_n $end
$var wire 1 ( cpu_m1_n $end
$var wire 1 ) cpu_iorq_n $end
$var wire 1 * cpu_halt_n $end
$var wire 8 + cpu_do [7:0] $end
$var wire 8 , cpu_di [7:0] $end
$var wire 1 - cpu_busak_n $end
$var wire 16 . cpu_a [15:0] $end
$var reg 1 / FAIL $end
$var reg 1 0 i_clk $end
$var reg 1 1 i_reset_btn $end
$var reg 8 2 io_o [7:0] $end
$var reg 8 3 mem_o [7:0] $end
$scope module cpu $end
$var wire 1 4 busrq_n $end
$var wire 1 5 cen $end
$var wire 1 ! clk $end
$var wire 8 6 di [7:0] $end
$var wire 1 7 int_n $end
$var wire 1 8 nmi_n $end
$var wire 1 " reset $end
$var wire 1 9 wait_n $end
$var wire 1 : write $end
$var wire 7 ; tstate [6:0] $end
$var wire 1 % rfsh_n $end
$var wire 1 < no_read $end
$var wire 7 = mcycle [6:0] $end
$var wire 1 ( m1_n $end
$var wire 1 > iorq $end
$var wire 1 ? intcycle_n $end
$var wire 1 * halt_n $end
$var wire 8 @ dout [7:0] $end
$var wire 1 - busak_n $end
$var wire 16 A A [15:0] $end
$var parameter 32 B IOWait $end
$var parameter 32 C Mode $end
$var parameter 32 D T2Write $end
$var reg 8 E di_reg [7:0] $end
$var reg 1 ) iorq_n $end
$var reg 1 ' mreq_n $end
$var reg 1 & rd_n $end
$var reg 1 $ wr_n $end
$scope module core $end
$var wire 1 4 busrq_n $end
$var wire 1 5 cen $end
$var wire 1 ! clk $end
$var wire 8 F di [7:0] $end
$var wire 8 G dinst [7:0] $end
$var wire 1 7 int_n $end
$var wire 1 8 nmi_n $end
$var wire 1 " reset $end
$var wire 1 % rfsh_n $end
$var wire 1 9 wait_n $end
$var wire 1 : write $end
$var wire 3 H tstates [2:0] $end
$var wire 1 < no_read $end
$var wire 3 I mcycles_d [2:0] $end
$var wire 1 J iorq_i $end
$var wire 3 K Special_LD [2:0] $end
$var wire 4 L Set_BusB_To [3:0] $end
$var wire 4 M Set_BusA_To [3:0] $end
$var wire 3 N Set_Addr_To [2:0] $end
$var wire 1 O SetEI $end
$var wire 1 P SetDI $end
$var wire 1 Q Save_ALU $end
$var wire 1 R RstP $end
$var wire 16 S RegBusC [15:0] $end
$var wire 16 T RegBusB [15:0] $end
$var wire 16 U RegBusA [15:0] $end
$var wire 1 V Read_To_Reg $end
$var wire 1 W Read_To_Acc $end
$var wire 1 X PreserveC $end
$var wire 2 Y Prefix [1:0] $end
$var wire 1 Z LDZ $end
$var wire 1 [ LDW $end
$var wire 1 \ LDSPHL $end
$var wire 1 ] JumpXY $end
$var wire 1 ^ JumpE $end
$var wire 1 _ Jump $end
$var wire 1 ` Inc_WZ $end
$var wire 1 a Inc_PC $end
$var wire 4 b IncDec_16 [3:0] $end
$var wire 1 c I_SCF $end
$var wire 1 d I_RRD $end
$var wire 1 e I_RLD $end
$var wire 1 f I_RETN $end
$var wire 1 g I_INRC $end
$var wire 1 h I_DJNZ $end
$var wire 1 i I_CPL $end
$var wire 1 j I_CCF $end
$var wire 1 k I_BTR $end
$var wire 1 l I_BT $end
$var wire 1 m I_BC $end
$var wire 2 n IMode [1:0] $end
$var wire 1 o Halt $end
$var wire 8 p F_Out [7:0] $end
$var wire 1 q Extra_Reg_Save $end
$var wire 1 r ExchangeRp $end
$var wire 1 s ExchangeRS $end
$var wire 1 t ExchangeDH $end
$var wire 1 u ExchangeAF $end
$var wire 1 v Call $end
$var wire 1 w Arith16 $end
$var wire 8 x ALU_Q [7:0] $end
$var wire 4 y ALU_Op [3:0] $end
$var parameter 32 z Flag_C $end
$var parameter 32 { Flag_H $end
$var parameter 32 | Flag_N $end
$var parameter 32 } Flag_P $end
$var parameter 32 ~ Flag_S $end
$var parameter 32 !" Flag_X $end
$var parameter 32 "" Flag_Y $end
$var parameter 32 #" Flag_Z $end
$var parameter 32 $" IOWait $end
$var parameter 32 %" Mode $end
$var parameter 3 &" aBC $end
$var parameter 3 '" aDE $end
$var parameter 3 (" aIOA $end
$var parameter 3 )" aNone $end
$var parameter 3 *" aSP $end
$var parameter 3 +" aXY $end
$var parameter 3 ," aZI $end
$var reg 16 -" A [15:0] $end
$var reg 8 ." ACC [7:0] $end
$var reg 4 /" ALU_Op_r [3:0] $end
$var reg 1 0" Alternate $end
$var reg 8 1" Ap [7:0] $end
$var reg 1 2" Arith16_r $end
$var reg 1 3" Auto_Wait $end
$var reg 1 4" Auto_Wait_t1 $end
$var reg 1 5" Auto_Wait_t2 $end
$var reg 1 6" BTR_r $end
$var reg 8 7" BusA [7:0] $end
$var reg 1 8" BusAck $end
$var reg 8 9" BusB [7:0] $end
$var reg 1 :" BusReq_s $end
$var reg 1 ;" ClkEn $end
$var reg 8 <" DI_Reg [7:0] $end
$var reg 8 =" F [7:0] $end
$var reg 8 >" Fp [7:0] $end
$var reg 16 ?" HaltPC [15:0] $end
$var reg 1 @" Halt_FF $end
$var reg 8 A" I [7:0] $end
$var reg 16 B" ID16 [15:0] $end
$var reg 1 C" INT_s $end
$var reg 8 D" IR [7:0] $end
$var reg 2 E" ISet [1:0] $end
$var reg 2 F" IStatus [1:0] $end
$var reg 1 G" IncDecZ $end
$var reg 1 H" IntCycle $end
$var reg 1 I" IntE $end
$var reg 1 J" IntE_FF1 $end
$var reg 1 K" IntE_FF2 $end
$var reg 1 L" NMICycle $end
$var reg 1 M" NMI_s $end
$var reg 1 N" NextIs_XY_Fetch $end
$var reg 1 O" No_BTR $end
$var reg 1 P" Oldnmi_n $end
$var reg 16 Q" PC [15:0] $end
$var reg 16 R" PC16 [15:0] $end
$var reg 16 S" PC16_B [15:0] $end
$var reg 3 T" Pre_XY_F_M [2:0] $end
$var reg 1 U" PreserveC_r $end
$var reg 8 V" R [7:0] $end
$var reg 5 W" Read_To_Reg_r [4:0] $end
$var reg 3 X" RegAddrA [2:0] $end
$var reg 3 Y" RegAddrA_r [2:0] $end
$var reg 3 Z" RegAddrB [2:0] $end
$var reg 3 [" RegAddrB_r [2:0] $end
$var reg 3 \" RegAddrC [2:0] $end
$var reg 16 ]" RegBusA_r [15:0] $end
$var reg 8 ^" RegDIH [7:0] $end
$var reg 8 _" RegDIL [7:0] $end
$var reg 1 `" RegWEH $end
$var reg 1 a" RegWEL $end
$var reg 16 b" SP [15:0] $end
$var reg 16 c" SP16 [15:0] $end
$var reg 16 d" SP16_A [15:0] $end
$var reg 16 e" SP16_B [15:0] $end
$var reg 1 f" Save_ALU_r $end
$var reg 8 g" Save_Mux [7:0] $end
$var reg 1 h" SetEI_r $end
$var reg 1 i" T_Res $end
$var reg 16 j" TmpAddr [15:0] $end
$var reg 1 k" XY_Ind $end
$var reg 2 l" XY_State [1:0] $end
$var reg 1 m" Z16_r $end
$var reg 1 - busak_n $end
$var reg 8 n" dout [7:0] $end
$var reg 1 * halt_n $end
$var reg 1 ? intcycle_n $end
$var reg 1 > iorq $end
$var reg 1 o" last_mcycle $end
$var reg 1 p" last_tstate $end
$var reg 1 ( m1_n $end
$var reg 7 q" mc [6:0] $end
$var reg 7 r" mcycle [6:0] $end
$var reg 3 s" mcycles [2:0] $end
$var reg 1 t" rfsh_n_r $end
$var reg 1 u" stop $end
$var reg 7 v" ts [6:0] $end
$var reg 7 w" tstate [6:0] $end
$scope function mcyc_to_number $end
$var reg 7 x" mcyc [6:0] $end
$upscope $end
$scope function number_to_bitvec $end
$var reg 3 y" num [2:0] $end
$upscope $end
$scope module i_alu $end
$var wire 4 z" ALU_Op [3:0] $end
$var wire 1 2" Arith16 $end
$var wire 8 {" BusA [7:0] $end
$var wire 8 |" BusB [7:0] $end
$var wire 8 }" F_In [7:0] $end
$var wire 6 ~" IR [5:0] $end
$var wire 2 !# ISet [1:0] $end
$var wire 1 m" Z16 $end
$var parameter 32 "# Flag_C $end
$var parameter 32 ## Flag_H $end
$var parameter 32 $# Flag_N $end
$var parameter 32 %# Flag_P $end
$var parameter 32 &# Flag_S $end
$var parameter 32 '# Flag_X $end
$var parameter 32 (# Flag_Y $end
$var parameter 32 )# Flag_Z $end
$var parameter 32 *# Mode $end
$var reg 8 +# BitMask [7:0] $end
$var reg 1 ,# Carry7_v $end
$var reg 1 -# Carry_v $end
$var reg 9 .# DAA_Q [8:0] $end
$var reg 8 /# F_Out [7:0] $end
$var reg 1 0# HalfCarry_v $end
$var reg 1 1# OverFlow_v $end
$var reg 8 2# Q [7:0] $end
$var reg 8 3# Q_t [7:0] $end
$var reg 8 4# Q_v [7:0] $end
$var reg 1 5# UseCarry $end
$scope function AddSub1 $end
$var reg 1 6# A $end
$var reg 1 7# B $end
$var reg 1 8# Carry_In $end
$var reg 1 9# Sub $end
$upscope $end
$scope function AddSub3 $end
$var reg 3 :# A [2:0] $end
$var reg 3 ;# B [2:0] $end
$var reg 1 <# Carry_In $end
$var reg 1 =# Sub $end
$upscope $end
$scope function AddSub4 $end
$var reg 4 ># A [3:0] $end
$var reg 4 ?# B [3:0] $end
$var reg 1 @# Carry_In $end
$var reg 1 A# Sub $end
$upscope $end
$upscope $end
$scope module mcode $end
$var wire 8 B# F [7:0] $end
$var wire 1 H" INTCycle $end
$var wire 8 C# IR [7:0] $end
$var wire 2 D# ISet [1:0] $end
$var wire 7 E# MCycle [6:0] $end
$var wire 1 L" NMICycle $end
$var wire 1 k" XY_Ind $end
$var wire 3 F# w_cc [2:0] $end
$var wire 1 G# f_cc_true $end
$var wire 3 H# SSS [2:0] $end
$var wire 2 I# DPAIR [1:0] $end
$var wire 3 J# DDD [2:0] $end
$var parameter 32 K# Flag_C $end
$var parameter 32 L# Flag_H $end
$var parameter 32 M# Flag_N $end
$var parameter 32 N# Flag_P $end
$var parameter 32 O# Flag_S $end
$var parameter 32 P# Flag_X $end
$var parameter 32 Q# Flag_Y $end
$var parameter 32 R# Flag_Z $end
$var parameter 32 S# Mode $end
$var parameter 3 T# aBC $end
$var parameter 3 U# aDE $end
$var parameter 3 V# aIOA $end
$var parameter 3 W# aNone $end
$var parameter 3 X# aSP $end
$var parameter 3 Y# aXY $end
$var parameter 3 Z# aZI $end
$var reg 4 [# ALU_Op [3:0] $end
$var reg 1 w Arith16 $end
$var reg 1 v Call $end
$var reg 1 u ExchangeAF $end
$var reg 1 t ExchangeDH $end
$var reg 1 s ExchangeRS $end
$var reg 1 r ExchangeRp $end
$var reg 1 q Extra_Reg_Save $end
$var reg 1 o Halt $end
$var reg 2 \# IMode [1:0] $end
$var reg 1 J IORQ $end
$var reg 1 m I_BC $end
$var reg 1 l I_BT $end
$var reg 1 k I_BTR $end
$var reg 1 j I_CCF $end
$var reg 1 i I_CPL $end
$var reg 1 h I_DJNZ $end
$var reg 1 g I_INRC $end
$var reg 1 f I_RETN $end
$var reg 1 e I_RLD $end
$var reg 1 d I_RRD $end
$var reg 1 c I_SCF $end
$var reg 4 ]# IncDec_16 [3:0] $end
$var reg 1 a Inc_PC $end
$var reg 1 ` Inc_WZ $end
$var reg 1 _ Jump $end
$var reg 1 ^ JumpE $end
$var reg 1 ] JumpXY $end
$var reg 1 \ LDSPHL $end
$var reg 1 [ LDW $end
$var reg 1 Z LDZ $end
$var reg 3 ^# MCycles [2:0] $end
$var reg 1 < NoRead $end
$var reg 2 _# Prefix [1:0] $end
$var reg 1 X PreserveC $end
$var reg 1 W Read_To_Acc $end
$var reg 1 V Read_To_Reg $end
$var reg 1 R RstP $end
$var reg 1 Q Save_ALU $end
$var reg 1 P SetDI $end
$var reg 1 O SetEI $end
$var reg 3 `# Set_Addr_To [2:0] $end
$var reg 4 a# Set_BusA_To [3:0] $end
$var reg 4 b# Set_BusB_To [3:0] $end
$var reg 3 c# Special_LD [2:0] $end
$var reg 3 d# TStates [2:0] $end
$var reg 1 : Write $end
$scope begin default_ed_block $end
$upscope $end
$scope begin handle_prefixes $end
$upscope $end
$upscope $end
$scope module regs $end
$var wire 3 e# AddrA [2:0] $end
$var wire 3 f# AddrB [2:0] $end
$var wire 3 g# AddrC [2:0] $end
$var wire 8 h# B [7:0] $end
$var wire 8 i# C [7:0] $end
$var wire 1 ;" CEN $end
$var wire 8 j# D [7:0] $end
$var wire 8 k# DIH [7:0] $end
$var wire 8 l# DIL [7:0] $end
$var wire 8 m# DOAH [7:0] $end
$var wire 8 n# DOAL [7:0] $end
$var wire 8 o# DOBH [7:0] $end
$var wire 8 p# DOBL [7:0] $end
$var wire 8 q# DOCH [7:0] $end
$var wire 8 r# DOCL [7:0] $end
$var wire 8 s# E [7:0] $end
$var wire 8 t# H [7:0] $end
$var wire 8 u# L [7:0] $end
$var wire 1 `" WEH $end
$var wire 1 a" WEL $end
$var wire 1 ! clk $end
$var wire 16 v# IY [15:0] $end
$var wire 16 w# IX [15:0] $end
$var wire 16 x# HLp [15:0] $end
$var wire 16 y# HL [15:0] $end
$var wire 16 z# DEp [15:0] $end
$var wire 16 {# DE [15:0] $end
$var wire 16 |# BCp [15:0] $end
$var wire 16 }# BC [15:0] $end
$upscope $end
$scope begin sync_inputs $end
$upscope $end
$upscope $end
$upscope $end
$scope task ASSERT $end
$var reg 1 ~# HaltFF $end
$var reg 8 !$ I [7:0] $end
$var reg 2 "$ IFF [1:0] $end
$var reg 2 #$ IM [1:0] $end
$var reg 8 $$ R [7:0] $end
$var reg 192 %$ REGS [191:0] $end
$var reg 1 &$ alt $end
$upscope $end
$scope task ASSERTMEM $end
$var reg 16 '$ addr [15:0] $end
$var reg 8 ($ expected [7:0] $end
$upscope $end
$scope task RESULT $end
$upscope $end
$scope task SETFAIL $end
$upscope $end
$scope task SETMEM $end
$var reg 16 )$ addr [15:0] $end
$var reg 8 *$ value [7:0] $end
$upscope $end
$scope task SETUP $end
$var reg 1 +$ HaltFF $end
$var reg 8 ,$ I [7:0] $end
$var reg 2 -$ IFF [1:0] $end
$var reg 2 .$ IM [1:0] $end
$var reg 8 /$ R [7:0] $end
$var reg 192 0$ REGS [191:0] $end
$var reg 1 1$ alt $end
$upscope $end
$scope task TESTCASE $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 Z#
b10 Y#
b101 X#
b111 W#
b100 V#
b1 U#
b0 T#
b0 S#
b110 R#
b101 Q#
b11 P#
b111 O#
b10 N#
b1 M#
b100 L#
b0 K#
b0 *#
b110 )#
b101 (#
b11 '#
b111 &#
b10 %#
b1 $#
b100 ##
b0 "#
b110 ,"
b10 +"
b101 *"
b111 )"
b100 ("
b1 '"
b0 &"
b0 %"
b1 $"
b110 #"
b101 ""
b11 !"
b111 ~
b10 }
b1 |
b100 {
b0 z
b1 D
b0 C
b1 B
$end
#0
$dumpvars
x1$
bx 0$
bx /$
bx .$
bx -$
bx ,$
x+$
bx *$
bx )$
bx ($
bx '$
x&$
bx %$
bx $$
bx #$
bx "$
bx !$
x~#
bx }#
bx |#
bx {#
bx z#
bx y#
bx x#
bx w#
bx v#
bx u#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
bx k#
bx j#
bx i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
bx [#
bx J#
bx I#
bx H#
xG#
bx F#
bx E#
bx D#
bx C#
bx B#
xA#
x@#
bx ?#
bx >#
x=#
x<#
bx ;#
bx :#
x9#
x8#
x7#
x6#
x5#
bx 4#
bx 3#
bx 2#
x1#
x0#
bx /#
bx .#
x-#
x,#
bx +#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
xu"
1t"
bx s"
bx r"
bx q"
xp"
xo"
bx n"
xm"
bx l"
xk"
bx j"
0i"
xh"
bx g"
xf"
bx e"
bx d"
bx c"
bx b"
0a"
0`"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
xU"
bx T"
bx S"
bx R"
bx Q"
xP"
xO"
0N"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
bx F"
bx E"
bx D"
xC"
bx B"
bx A"
x@"
bx ?"
bx >"
bx ="
bx <"
x;"
x:"
bx 9"
x8"
bx 7"
x6"
x5"
x4"
x3"
x2"
bx 1"
x0"
bx /"
bx ."
bx -"
bx y
bx x
xw
xv
xu
xt
xs
xr
xq
bx p
xo
bx n
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
bx b
xa
x`
x_
x^
x]
x\
x[
xZ
bx Y
xX
xW
xV
bx U
bx T
bx S
xR
xQ
xP
xO
bx N
bx M
bx L
bx K
xJ
bx I
bx H
bx G
bx F
bx E
bx A
bx @
x?
x>
bx =
x<
bx ;
x:
19
18
17
bx 6
15
14
bx 3
bx 2
11
00
0/
bx .
x-
bx ,
bx +
x*
1)
x(
1'
1&
1%
1$
b10000xxxxxxxx #
1"
0!
$end
#5
0u"
0>
0p"
0:
0<
0o
b11 n
b11 \#
0O
0P
0g
0d
0e
0k
0m
0l
0f
0c
0j
0i
0h
0s
0u
0r
0t
b0 K
b0 c#
0\
0[
0Z
0R
0v
0]
0^
0_
b111 N
b111 `#
0J
0w
0X
0Q
b0 y
b0 [#
b0 M
b0 a#
b0 L
b0 b#
0q
0V
0W
b0 b
b0 ]#
0`
0a
b100 H
b100 d#
b1 I
b1 ^#
0G#
b0 _"
b0 l#
b0 ^"
b0 k#
09#
0=#
0A#
0@#
05#
b1 +#
bx0xxxx0x p
bx0xxxx0x /#
b0 ~"
b0 Y
b0 _#
b0 F#
b0 J#
b0 H#
b0 I#
b1000000000000 #
b0 c"
b1 R"
b1 e"
b1111111111111111 d"
b1 S"
b0 g"
1;"
03"
0I"
1?
1-
1*
b0 <"
b1 ;
b1 v"
b1 =
b1 q"
0P"
0M"
0C"
0:"
0k"
0U"
0f"
b0 /"
b0 z"
0m"
06"
02"
b0 W"
00"
b1111111111111111 b"
b0 V"
b0 A"
b11111111 >"
b11111111 1"
b11111111 ="
b11111111 }"
b11111111 B#
b11111111 ."
b0 +
b0 @
b0 n"
b0 s"
b0 F"
b0 l"
b0 E"
b0 !#
b0 D#
b0 D"
b0 C#
b0 j"
b0 .
b0 A
b0 -"
b0 ?"
b0 Q"
0h"
1(
05"
04"
0O"
0K"
0J"
0H"
0L"
08"
0@"
b0 T"
b1 w"
b1 r"
b1 E#
b0 E
b0 F
1!
10
#10
0!
00
#15
b0 Z"
b0 f#
b0 X"
b0 e#
b11 \"
b11 g#
b0 ["
b0 Y"
1!
10
#20
0!
00
#25
1!
10
#30
0!
00
0"
01
#35
b1111100 x
b1111100 2#
b1111100 3#
01#
0-#
06#
07#
08#
0,#
b11 :#
b11 ;#
1<#
10#
b1111100 4#
b1110 >#
b1110 ?#
b10 ;
b10 v"
1o"
b111110 7"
b111110 {"
b111110 9"
b111110 |"
b11111001011010 ]"
1P"
0(
b10 w"
b1 s"
1G#
b1 c"
b11111001011011 B"
b0 d"
b111000 p
b111000 /#
1!
10
b1001000 *$
b1111110110110001 )$
b0 b"
b1111111000011100 v#
b1 r#
b1010100000000001 S
b10101000 q#
b1010100000000001 w#
b0 x#
b0 z#
b0 |#
b10000011 u#
b10101011 t#
b1010101110000011 y#
b111101 s#
b11111011 j#
b1111101100111101 {#
b1011010 n#
b1011010 p#
b1011010 i#
b11111001011010 U
b111110 m#
b11111001011010 T
b111110 o#
b111110 h#
b11111001011010 }#
b0 >"
b0 1"
b10110100 ="
b10110100 }"
b10110100 B#
b110001 ."
01$
0+$
b0 .$
b0 -$
b0 /$
b0 ,$
b1100011011010000111110010110101111101100111101101010111000001100000000000000000000000000000000000000000000000000000000000000001010100000000001111111100001110000000000000000000000000000000000 0$
#40
b11111101 ,
b11111101 6
b11111101 G
b11111101 3
0!
00
#45
b100 ;
b100 v"
b111110 +
b111110 @
b111110 n"
b100 w"
0'
0&
1!
10
#50
0!
00
#55
b111 y
b111 [#
b11111101 _"
b11111101 l#
b11111101 ^"
b11111101 k#
b11111101 g"
b111000 p
b111000 /#
b1111100 3#
b10000000 +#
b11111101 <"
b1000 ;
b1000 v"
b111101 ~"
b11 Y
b11 _#
b111 F#
b111 J#
b101 H#
b11 I#
b1010011111111110 c"
b10 R"
b1111111111111101 e"
b1010100000000001 d"
b11111101 E
b11111101 F
1'
1&
b1000 w"
1(
0%
0t"
b11111101 D"
b11111101 C#
b1 Q"
b1 V"
1!
10
#60
0!
00
#65
1i"
b1 c"
b1 e"
b0 d"
b10000 ;
b10000 v"
1p"
b10000 w"
0'
1!
10
#70
0!
00
#75
0i"
b10 ;
b10 v"
0p"
b0 x
b0 2#
b1101010 p
b1101010 /#
b0 3#
1-#
19#
18#
1,#
1=#
b0 4#
1A#
1@#
b1000000000001 #
1'
0(
b10 w"
1%
1t"
b111 /"
b111 z"
b1 .
b1 A
b1 -"
1!
10
#80
b11001011 ,
b11001011 6
b11001011 G
b11001011 3
0!
00
#85
b1111100 x
b1111100 2#
b111000 p
b111000 /#
b1111100 3#
0-#
09#
08#
0,#
0=#
b1111100 4#
0A#
0@#
b100 ;
b100 v"
b0 /"
b0 z"
b100 w"
0'
0&
1!
10
#90
0!
00
#95
b1 y
b1 [#
b11001011 _"
b11001011 l#
b11001011 ^"
b11001011 k#
0G#
b11001011 g"
b111000 p
b111000 /#
b1111100 3#
b10 +#
b11001011 <"
b1000 ;
b1000 v"
b1011 ~"
b1 Y
b1 _#
b1 F#
b1 J#
b11 H#
b0 I#
1N"
b1010011111001100 c"
b11 R"
b1111111111001011 e"
b1010100000000001 d"
b11001011 E
b11001011 F
1'
1&
b1000 w"
1(
0%
0t"
b10 l"
b11001011 D"
b11001011 C#
b10 Q"
b1 ?"
b10 V"
1!
10
#100
0!
00
#105
1i"
b1 c"
b1 e"
b0 d"
b10000 ;
b10000 v"
1p"
b10000 w"
0'
1!
10
#110
0!
00
#115
1a
b11 H
b11 d#
0o"
0N"
0i"
b10 ;
b10 v"
b100000 =
b100000 q"
0p"
b111000 p
b111000 /#
b1111100 3#
15#
b1000000000010 #
1'
b1 T"
b100000 r"
b100000 E#
b10 w"
1%
1t"
b1 /"
b1 z"
b10 .
b10 A
b10 -"
b1 x"
1!
10
#120
b10010101 ,
b10010101 6
b10010101 G
b10010101 3
0!
00
#125
b11 L
b11 b#
b11 M
b11 a#
1a
b0 Y
b0 _#
b111000 p
b111000 /#
b1111100 3#
05#
b100 ;
b100 v"
b11111110 q#
b1111111000011100 S
b11100 r#
b111 \"
b111 g#
b1 E"
b1 !#
b1 D#
1k"
b0 /"
b0 z"
b100 w"
0'
0&
1!
10
#130
0!
00
#135
b10010101 _"
b10010101 l#
b10010101 ^"
b10010101 k#
b1111101100111110 B"
b10110100 x
b10110100 2#
b10110100 p
b10110100 /#
b10110100 3#
11#
18#
1,#
b101 :#
b101 ;#
b10110100 4#
b1010 >#
b1010 ?#
b10010101 g"
1i"
b10010101 <"
b1000 ;
b1000 v"
b11111011 o#
b1111101100111101 T
b111101 p#
b1 Z"
b1 f#
b11111011 m#
b1111101100111101 U
b111101 n#
b1 X"
b1 e#
1p"
b1111110110110001 c"
b100 R"
b1111111110010101 e"
b1111111000011100 d"
b1011010 7"
b1011010 {"
b1011010 9"
b1011010 |"
b11111110 q#
b1111111000011100 S
b11100 r#
b111 \"
b111 g#
b1 ["
b1 Y"
b10010101 E
b10010101 F
1'
1&
b1000 w"
b11 Q"
1!
10
#140
0!
00
#145
b101 H
b101 d#
b11 M
b11 a#
b11 L
b11 b#
1a
b1111010 x
b1111010 2#
b111000 p
b111000 /#
b1111010 3#
01#
08#
0,#
b11 :#
b11 ;#
b1111010 4#
b1101 >#
b1101 ?#
15#
b1000000000011 #
0i"
b1 c"
b1 e"
b0 d"
b10 ;
b10 v"
b1000000 =
b1000000 q"
0p"
b1111101100111101 ]"
b11111110 q#
b1111111000011100 S
b11100 r#
b111 \"
b111 g#
b111101 7"
b111101 {"
b111101 9"
b111101 |"
b11 W"
b1111110110110001 j"
b1 /"
b1 z"
b11 .
b11 A
b11 -"
b1000000 r"
b1000000 E#
b10 w"
1!
10
#150
b10010100 ,
b10010100 6
b10010100 G
b10010100 3
0!
00
#155
b11111001011011 B"
b100 ;
b100 v"
b111110 m#
b11111001011010 U
b1011010 n#
b0 X"
b0 e#
b111000 p
b111000 /#
b1111010 3#
05#
b10101000 q#
b1010100000000001 S
b1 r#
b11 \"
b11 g#
0'
0&
b100 w"
b111101 +
b111101 @
b111101 n"
b0 W"
b0 /"
b0 z"
1!
10
#160
0!
00
#165
b10 y
b10 [#
b100 M
b100 a#
b100 L
b100 b#
1a
b101 H
b101 d#
1G#
b10010100 _"
b10010100 l#
b10010100 ^"
b10010100 k#
b10010111 x
b10010111 2#
b10010100 p
b10010100 /#
b10010111 3#
11#
18#
1,#
b101 :#
b10010111 4#
b1010 >#
b100 +#
b10100 ~"
b10 F#
b10 J#
b100 H#
b1 I#
b10010100 g"
b1010011110010101 c"
b101 R"
b1111101100111110 B"
b1111111110010100 e"
b1010100000000001 d"
b11111011 m#
b1111101100111101 U
b111101 n#
b1 X"
b1 e#
b10010100 <"
b1000 ;
b1000 v"
b11111001011010 ]"
b1011010 7"
b1011010 {"
b100 Q"
b10010100 D"
b10010100 C#
b1000 w"
b10010100 E
b10010100 F
1'
1&
1!
10
#170
0!
00
#175
b11110110 x
b11110110 2#
b10110001 p
b10110001 /#
b11110110 3#
01#
1-#
16#
17#
b111 :#
b111 ;#
b11110110 4#
b1011 >#
b1011 ?#
b1 c"
b1010101110000100 B"
b1 e"
b0 d"
b10000 ;
b10000 v"
b10101011 o#
b1010101110000011 T
b10000011 p#
b10 Z"
b10 f#
b10101011 m#
b1010101110000011 U
b10000011 n#
b10 X"
b10 e#
b11111011 7"
b11111011 {"
b11111011 9"
b11111011 |"
b1111101100111101 ]"
b10 ["
b10 Y"
b10000 w"
1!
10
#180
0!
00
#185
b1010110 x
b1010110 2#
b10101 p
b10101 /#
b1010110 3#
11#
08#
0,#
b1010110 4#
b10 :#
b10 ;#
1i"
b100000 ;
b100000 v"
1p"
b1010101110000011 ]"
b10101011 7"
b10101011 {"
b10101011 9"
b10101011 |"
b100000 w"
1!
10
#190
0!
00
#195
b100 M
b100 a#
b100 L
b100 b#
0a
b11 H
b11 d#
0i"
b10 ;
b10 v"
b10 =
b10 q"
0p"
b0 x
b0 2#
b1000010 p
b1000010 /#
b0 3#
01#
19#
18#
1,#
1=#
b0 4#
1A#
1@#
b1000000000100 #
b10 r"
b10 E#
b10 w"
b100 W"
b10 /"
b10 z"
b100 .
b100 A
b100 -"
b10 y"
1!
10
#200
bx ,
bx 6
bx G
bx 3
0!
00
#205
b1010110 x
b1010110 2#
b10101 p
b10101 /#
b1010110 3#
11#
09#
08#
0,#
0=#
b1010110 4#
0A#
0@#
b11111001011011 B"
b100 ;
b100 v"
b111110 m#
b11111001011010 U
b1011010 n#
b0 X"
b0 e#
b10101011 +
b10101011 @
b10101011 n"
b0 W"
b0 /"
b0 z"
b100 w"
0'
0&
1!
10
#210
0!
00
#215
bx _"
bx l#
bx ^"
bx k#
bx g"
1i"
b11101001 x
b11101001 2#
b10111000 p
b10111000 /#
b11101001 3#
01#
0-#
06#
b11 :#
b11101001 4#
b1110 >#
bx c"
b1010101110000100 B"
bx e"
b1010100000000001 d"
bx <"
b1000 ;
b1000 v"
b10101011 m#
b1010101110000011 U
b10000011 n#
b10 X"
b10 e#
1p"
b111110 7"
b111110 {"
b11111001011010 ]"
bx E
bx F
1'
1&
b1000 w"
1!
10
#220
0!
00
#225
b100 M
b100 a#
b100 L
b100 b#
b0 x
b0 2#
b1000010 p
b1000010 /#
b0 3#
1-#
16#
19#
18#
1,#
b10 :#
1=#
b0 4#
b1011 >#
1A#
1@#
0i"
b1 c"
b1 e"
b0 d"
b10 ;
b10 v"
b100 =
b100 q"
0p"
b1010101110000011 ]"
b10101011 7"
b10101011 {"
b100 W"
b10 /"
b10 z"
b100 r"
b100 E#
b10 w"
1!
10
#230
0!
00
#235
b11111001011011 B"
b100 ;
b100 v"
b111110 m#
b11111001011010 U
b1011010 n#
b0 X"
b0 e#
b1010110 x
b1010110 2#
b10101 p
b10101 /#
b1010110 3#
11#
09#
08#
0,#
0=#
b1010110 4#
0A#
0@#
0'
0&
b100 w"
b0 W"
b0 /"
b0 z"
1!
10
#240
0!
00
#245
1i"
b11101001 x
b11101001 2#
b10111000 p
b10111000 /#
b11101001 3#
01#
0-#
06#
b11 :#
b11101001 4#
b1110 >#
bx c"
b1010101110000100 B"
bx e"
b1010100000000001 d"
b1000 ;
b1000 v"
b10101011 m#
b1010101110000011 U
b10000011 n#
b10 X"
b10 e#
1p"
b11111001011010 ]"
b111110 7"
b111110 {"
b1000 w"
1'
1&
1!
10
#250
0!
00
#255
b100 M
b100 a#
b100 L
b100 b#
0i"
b1 c"
b1 e"
b0 d"
b10 ;
b10 v"
b1000 =
b1000 q"
0p"
b0 x
b0 2#
b1000010 p
b1000010 /#
b0 3#
1-#
16#
19#
18#
1,#
b10 :#
1=#
b0 4#
b1011 >#
1A#
1@#
b10101011 7"
b10101011 {"
b1010101110000011 ]"
b1000 r"
b1000 E#
b10 w"
b100 W"
b10 /"
b10 z"
1!
10
#260
0!
00
#265
b1010110 x
b1010110 2#
b10101 p
b10101 /#
b1010110 3#
11#
09#
08#
0,#
0=#
b1010110 4#
0A#
0@#
b11111001011011 B"
b100 ;
b100 v"
b111110 m#
b11111001011010 U
b1011010 n#
b0 X"
b0 e#
b0 W"
b0 /"
b0 z"
b100 w"
0'
0&
1!
10
#270
0!
00
#275
1i"
b11101001 x
b11101001 2#
b10111000 p
b10111000 /#
b11101001 3#
01#
0-#
06#
b11 :#
b11101001 4#
b1110 >#
bx c"
b1010101110000100 B"
bx e"
b1010100000000001 d"
b1000 ;
b1000 v"
b10101011 m#
b1010101110000011 U
b10000011 n#
b10 X"
b10 e#
1p"
b111110 7"
b111110 {"
b11111001011010 ]"
1'
1&
b1000 w"
1!
10
#280
0!
00
#285
b100 M
b100 a#
b100 L
b100 b#
b0 x
b0 2#
b1000010 p
b1000010 /#
b0 3#
1-#
16#
19#
18#
1,#
b10 :#
1=#
b0 4#
b1011 >#
1A#
1@#
0i"
b1 c"
b1 e"
b0 d"
b10 ;
b10 v"
b10000 =
b10000 q"
0p"
b1010101110000011 ]"
b10101011 7"
b10101011 {"
b100 W"
b10 /"
b10 z"
b10000 r"
b10000 E#
b10 w"
1!
10
1/
0&$
0~#
b0 #$
b0 "$
b10 $$
b0 !$
b1100011011010000111110010110101111101100111101010010001000001100000000000000000000000000000000000000000000000000000000000000001010100000000001111111100001110000000000000000000000000000000100 %$
