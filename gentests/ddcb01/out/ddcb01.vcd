$date
	Thu Oct 23 19:39:12 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_ddcb01 $end
$var wire 1 ! cpu_clk $end
$var wire 1 " cpu_reset $end
$var wire 1 # cpu_wr_n $end
$var wire 1 $ cpu_rfsh_n $end
$var wire 1 % cpu_rd_n $end
$var wire 1 & cpu_mreq_n $end
$var wire 1 ' cpu_m1_n $end
$var wire 1 ( cpu_iorq_n $end
$var wire 1 ) cpu_halt_n $end
$var wire 8 * cpu_do [7:0] $end
$var wire 8 + cpu_di [7:0] $end
$var wire 1 , cpu_busak_n $end
$var wire 16 - cpu_a [15:0] $end
$var reg 1 . FAIL $end
$var reg 1 / i_clk $end
$var reg 1 0 i_reset_btn $end
$var reg 8 1 io_o [7:0] $end
$var reg 8 2 mem_o [7:0] $end
$scope module cpu $end
$var wire 1 3 busrq_n $end
$var wire 1 4 cen $end
$var wire 1 ! clk $end
$var wire 8 5 di [7:0] $end
$var wire 1 6 int_n $end
$var wire 1 7 nmi_n $end
$var wire 1 " reset $end
$var wire 1 8 wait_n $end
$var wire 1 9 write $end
$var wire 7 : tstate [6:0] $end
$var wire 1 $ rfsh_n $end
$var wire 1 ; no_read $end
$var wire 7 < mcycle [6:0] $end
$var wire 1 ' m1_n $end
$var wire 1 = iorq $end
$var wire 1 > intcycle_n $end
$var wire 1 ) halt_n $end
$var wire 8 ? dout [7:0] $end
$var wire 1 , busak_n $end
$var wire 16 @ A [15:0] $end
$var parameter 32 A IOWait $end
$var parameter 32 B Mode $end
$var parameter 32 C T2Write $end
$var reg 8 D di_reg [7:0] $end
$var reg 1 ( iorq_n $end
$var reg 1 & mreq_n $end
$var reg 1 % rd_n $end
$var reg 1 # wr_n $end
$scope module core $end
$var wire 1 3 busrq_n $end
$var wire 1 4 cen $end
$var wire 1 ! clk $end
$var wire 8 E di [7:0] $end
$var wire 8 F dinst [7:0] $end
$var wire 1 6 int_n $end
$var wire 1 7 nmi_n $end
$var wire 1 " reset $end
$var wire 1 $ rfsh_n $end
$var wire 1 8 wait_n $end
$var wire 1 9 write $end
$var wire 3 G tstates [2:0] $end
$var wire 1 ; no_read $end
$var wire 3 H mcycles_d [2:0] $end
$var wire 1 I iorq_i $end
$var wire 3 J Special_LD [2:0] $end
$var wire 4 K Set_BusB_To [3:0] $end
$var wire 4 L Set_BusA_To [3:0] $end
$var wire 3 M Set_Addr_To [2:0] $end
$var wire 1 N SetEI $end
$var wire 1 O SetDI $end
$var wire 1 P Save_ALU $end
$var wire 1 Q RstP $end
$var wire 16 R RegBusC [15:0] $end
$var wire 16 S RegBusB [15:0] $end
$var wire 16 T RegBusA [15:0] $end
$var wire 1 U Read_To_Reg $end
$var wire 1 V Read_To_Acc $end
$var wire 1 W PreserveC $end
$var wire 2 X Prefix [1:0] $end
$var wire 1 Y LDZ $end
$var wire 1 Z LDW $end
$var wire 1 [ LDSPHL $end
$var wire 1 \ JumpXY $end
$var wire 1 ] JumpE $end
$var wire 1 ^ Jump $end
$var wire 1 _ Inc_WZ $end
$var wire 1 ` Inc_PC $end
$var wire 4 a IncDec_16 [3:0] $end
$var wire 1 b I_SCF $end
$var wire 1 c I_RRD $end
$var wire 1 d I_RLD $end
$var wire 1 e I_RETN $end
$var wire 1 f I_INRC $end
$var wire 1 g I_DJNZ $end
$var wire 1 h I_CPL $end
$var wire 1 i I_CCF $end
$var wire 1 j I_BTR $end
$var wire 1 k I_BT $end
$var wire 1 l I_BC $end
$var wire 2 m IMode [1:0] $end
$var wire 1 n Halt $end
$var wire 8 o F_Out [7:0] $end
$var wire 1 p Extra_Reg_Save $end
$var wire 1 q ExchangeRp $end
$var wire 1 r ExchangeRS $end
$var wire 1 s ExchangeDH $end
$var wire 1 t ExchangeAF $end
$var wire 1 u Call $end
$var wire 1 v Arith16 $end
$var wire 8 w ALU_Q [7:0] $end
$var wire 4 x ALU_Op [3:0] $end
$var parameter 32 y Flag_C $end
$var parameter 32 z Flag_H $end
$var parameter 32 { Flag_N $end
$var parameter 32 | Flag_P $end
$var parameter 32 } Flag_S $end
$var parameter 32 ~ Flag_X $end
$var parameter 32 !" Flag_Y $end
$var parameter 32 "" Flag_Z $end
$var parameter 32 #" IOWait $end
$var parameter 32 $" Mode $end
$var parameter 3 %" aBC $end
$var parameter 3 &" aDE $end
$var parameter 3 '" aIOA $end
$var parameter 3 (" aNone $end
$var parameter 3 )" aSP $end
$var parameter 3 *" aXY $end
$var parameter 3 +" aZI $end
$var reg 16 ," A [15:0] $end
$var reg 8 -" ACC [7:0] $end
$var reg 4 ." ALU_Op_r [3:0] $end
$var reg 1 /" Alternate $end
$var reg 8 0" Ap [7:0] $end
$var reg 1 1" Arith16_r $end
$var reg 1 2" Auto_Wait $end
$var reg 1 3" Auto_Wait_t1 $end
$var reg 1 4" Auto_Wait_t2 $end
$var reg 1 5" BTR_r $end
$var reg 8 6" BusA [7:0] $end
$var reg 1 7" BusAck $end
$var reg 8 8" BusB [7:0] $end
$var reg 1 9" BusReq_s $end
$var reg 1 :" ClkEn $end
$var reg 8 ;" DI_Reg [7:0] $end
$var reg 8 <" F [7:0] $end
$var reg 8 =" Fp [7:0] $end
$var reg 16 >" HaltPC [15:0] $end
$var reg 1 ?" Halt_FF $end
$var reg 8 @" I [7:0] $end
$var reg 16 A" ID16 [15:0] $end
$var reg 1 B" INT_s $end
$var reg 8 C" IR [7:0] $end
$var reg 2 D" ISet [1:0] $end
$var reg 2 E" IStatus [1:0] $end
$var reg 1 F" IncDecZ $end
$var reg 1 G" IntCycle $end
$var reg 1 H" IntE $end
$var reg 1 I" IntE_FF1 $end
$var reg 1 J" IntE_FF2 $end
$var reg 1 K" NMICycle $end
$var reg 1 L" NMI_s $end
$var reg 1 M" NextIs_XY_Fetch $end
$var reg 1 N" No_BTR $end
$var reg 1 O" Oldnmi_n $end
$var reg 16 P" PC [15:0] $end
$var reg 16 Q" PC16 [15:0] $end
$var reg 16 R" PC16_B [15:0] $end
$var reg 3 S" Pre_XY_F_M [2:0] $end
$var reg 1 T" PreserveC_r $end
$var reg 8 U" R [7:0] $end
$var reg 5 V" Read_To_Reg_r [4:0] $end
$var reg 3 W" RegAddrA [2:0] $end
$var reg 3 X" RegAddrA_r [2:0] $end
$var reg 3 Y" RegAddrB [2:0] $end
$var reg 3 Z" RegAddrB_r [2:0] $end
$var reg 3 [" RegAddrC [2:0] $end
$var reg 16 \" RegBusA_r [15:0] $end
$var reg 8 ]" RegDIH [7:0] $end
$var reg 8 ^" RegDIL [7:0] $end
$var reg 1 _" RegWEH $end
$var reg 1 `" RegWEL $end
$var reg 16 a" SP [15:0] $end
$var reg 16 b" SP16 [15:0] $end
$var reg 16 c" SP16_A [15:0] $end
$var reg 16 d" SP16_B [15:0] $end
$var reg 1 e" Save_ALU_r $end
$var reg 8 f" Save_Mux [7:0] $end
$var reg 1 g" SetEI_r $end
$var reg 1 h" T_Res $end
$var reg 16 i" TmpAddr [15:0] $end
$var reg 1 j" XY_Ind $end
$var reg 2 k" XY_State [1:0] $end
$var reg 1 l" Z16_r $end
$var reg 1 , busak_n $end
$var reg 8 m" dout [7:0] $end
$var reg 1 ) halt_n $end
$var reg 1 > intcycle_n $end
$var reg 1 = iorq $end
$var reg 1 n" last_mcycle $end
$var reg 1 o" last_tstate $end
$var reg 1 ' m1_n $end
$var reg 7 p" mc [6:0] $end
$var reg 7 q" mcycle [6:0] $end
$var reg 3 r" mcycles [2:0] $end
$var reg 1 s" rfsh_n_r $end
$var reg 1 t" stop $end
$var reg 7 u" ts [6:0] $end
$var reg 7 v" tstate [6:0] $end
$scope function mcyc_to_number $end
$var reg 7 w" mcyc [6:0] $end
$upscope $end
$scope function number_to_bitvec $end
$var reg 3 x" num [2:0] $end
$upscope $end
$scope module i_alu $end
$var wire 4 y" ALU_Op [3:0] $end
$var wire 1 1" Arith16 $end
$var wire 8 z" BusA [7:0] $end
$var wire 8 {" BusB [7:0] $end
$var wire 8 |" F_In [7:0] $end
$var wire 6 }" IR [5:0] $end
$var wire 2 ~" ISet [1:0] $end
$var wire 1 l" Z16 $end
$var parameter 32 !# Flag_C $end
$var parameter 32 "# Flag_H $end
$var parameter 32 ## Flag_N $end
$var parameter 32 $# Flag_P $end
$var parameter 32 %# Flag_S $end
$var parameter 32 &# Flag_X $end
$var parameter 32 '# Flag_Y $end
$var parameter 32 (# Flag_Z $end
$var parameter 32 )# Mode $end
$var reg 8 *# BitMask [7:0] $end
$var reg 1 +# Carry7_v $end
$var reg 1 ,# Carry_v $end
$var reg 9 -# DAA_Q [8:0] $end
$var reg 8 .# F_Out [7:0] $end
$var reg 1 /# HalfCarry_v $end
$var reg 1 0# OverFlow_v $end
$var reg 8 1# Q [7:0] $end
$var reg 8 2# Q_t [7:0] $end
$var reg 8 3# Q_v [7:0] $end
$var reg 1 4# UseCarry $end
$scope function AddSub1 $end
$var reg 1 5# A $end
$var reg 1 6# B $end
$var reg 1 7# Carry_In $end
$var reg 1 8# Sub $end
$upscope $end
$scope function AddSub3 $end
$var reg 3 9# A [2:0] $end
$var reg 3 :# B [2:0] $end
$var reg 1 ;# Carry_In $end
$var reg 1 <# Sub $end
$upscope $end
$scope function AddSub4 $end
$var reg 4 =# A [3:0] $end
$var reg 4 ># B [3:0] $end
$var reg 1 ?# Carry_In $end
$var reg 1 @# Sub $end
$upscope $end
$upscope $end
$scope module mcode $end
$var wire 8 A# F [7:0] $end
$var wire 1 G" INTCycle $end
$var wire 8 B# IR [7:0] $end
$var wire 2 C# ISet [1:0] $end
$var wire 7 D# MCycle [6:0] $end
$var wire 1 K" NMICycle $end
$var wire 1 j" XY_Ind $end
$var wire 3 E# w_cc [2:0] $end
$var wire 1 F# f_cc_true $end
$var wire 3 G# SSS [2:0] $end
$var wire 2 H# DPAIR [1:0] $end
$var wire 3 I# DDD [2:0] $end
$var parameter 32 J# Flag_C $end
$var parameter 32 K# Flag_H $end
$var parameter 32 L# Flag_N $end
$var parameter 32 M# Flag_P $end
$var parameter 32 N# Flag_S $end
$var parameter 32 O# Flag_X $end
$var parameter 32 P# Flag_Y $end
$var parameter 32 Q# Flag_Z $end
$var parameter 32 R# Mode $end
$var parameter 3 S# aBC $end
$var parameter 3 T# aDE $end
$var parameter 3 U# aIOA $end
$var parameter 3 V# aNone $end
$var parameter 3 W# aSP $end
$var parameter 3 X# aXY $end
$var parameter 3 Y# aZI $end
$var reg 4 Z# ALU_Op [3:0] $end
$var reg 1 v Arith16 $end
$var reg 1 u Call $end
$var reg 1 t ExchangeAF $end
$var reg 1 s ExchangeDH $end
$var reg 1 r ExchangeRS $end
$var reg 1 q ExchangeRp $end
$var reg 1 p Extra_Reg_Save $end
$var reg 1 n Halt $end
$var reg 2 [# IMode [1:0] $end
$var reg 1 I IORQ $end
$var reg 1 l I_BC $end
$var reg 1 k I_BT $end
$var reg 1 j I_BTR $end
$var reg 1 i I_CCF $end
$var reg 1 h I_CPL $end
$var reg 1 g I_DJNZ $end
$var reg 1 f I_INRC $end
$var reg 1 e I_RETN $end
$var reg 1 d I_RLD $end
$var reg 1 c I_RRD $end
$var reg 1 b I_SCF $end
$var reg 4 \# IncDec_16 [3:0] $end
$var reg 1 ` Inc_PC $end
$var reg 1 _ Inc_WZ $end
$var reg 1 ^ Jump $end
$var reg 1 ] JumpE $end
$var reg 1 \ JumpXY $end
$var reg 1 [ LDSPHL $end
$var reg 1 Z LDW $end
$var reg 1 Y LDZ $end
$var reg 3 ]# MCycles [2:0] $end
$var reg 1 ; NoRead $end
$var reg 2 ^# Prefix [1:0] $end
$var reg 1 W PreserveC $end
$var reg 1 V Read_To_Acc $end
$var reg 1 U Read_To_Reg $end
$var reg 1 Q RstP $end
$var reg 1 P Save_ALU $end
$var reg 1 O SetDI $end
$var reg 1 N SetEI $end
$var reg 3 _# Set_Addr_To [2:0] $end
$var reg 4 `# Set_BusA_To [3:0] $end
$var reg 4 a# Set_BusB_To [3:0] $end
$var reg 3 b# Special_LD [2:0] $end
$var reg 3 c# TStates [2:0] $end
$var reg 1 9 Write $end
$scope begin default_ed_block $end
$upscope $end
$scope begin handle_prefixes $end
$upscope $end
$upscope $end
$scope module regs $end
$var wire 3 d# AddrA [2:0] $end
$var wire 3 e# AddrB [2:0] $end
$var wire 3 f# AddrC [2:0] $end
$var wire 8 g# B [7:0] $end
$var wire 8 h# C [7:0] $end
$var wire 1 :" CEN $end
$var wire 8 i# D [7:0] $end
$var wire 8 j# DIH [7:0] $end
$var wire 8 k# DIL [7:0] $end
$var wire 8 l# DOAH [7:0] $end
$var wire 8 m# DOAL [7:0] $end
$var wire 8 n# DOBH [7:0] $end
$var wire 8 o# DOBL [7:0] $end
$var wire 8 p# DOCH [7:0] $end
$var wire 8 q# DOCL [7:0] $end
$var wire 8 r# E [7:0] $end
$var wire 8 s# H [7:0] $end
$var wire 8 t# L [7:0] $end
$var wire 1 _" WEH $end
$var wire 1 `" WEL $end
$var wire 1 ! clk $end
$var wire 16 u# IY [15:0] $end
$var wire 16 v# IX [15:0] $end
$var wire 16 w# HLp [15:0] $end
$var wire 16 x# HL [15:0] $end
$var wire 16 y# DEp [15:0] $end
$var wire 16 z# DE [15:0] $end
$var wire 16 {# BCp [15:0] $end
$var wire 16 |# BC [15:0] $end
$upscope $end
$scope begin sync_inputs $end
$upscope $end
$upscope $end
$upscope $end
$scope task ASSERT $end
$var reg 1 }# HaltFF $end
$var reg 8 ~# I [7:0] $end
$var reg 2 !$ IFF [1:0] $end
$var reg 8 "$ R [7:0] $end
$var reg 192 #$ REGS [191:0] $end
$var reg 1 $$ alt $end
$upscope $end
$scope task ASSERTMEM $end
$var reg 16 %$ addr [15:0] $end
$var reg 8 &$ expected [7:0] $end
$upscope $end
$scope task RESULT $end
$upscope $end
$scope task SETFAIL $end
$upscope $end
$scope task SETMEM $end
$var reg 16 '$ addr [15:0] $end
$var reg 8 ($ value [7:0] $end
$upscope $end
$scope task SETUP $end
$var reg 1 )$ HaltFF $end
$var reg 8 *$ I [7:0] $end
$var reg 2 +$ IFF [1:0] $end
$var reg 8 ,$ R [7:0] $end
$var reg 192 -$ REGS [191:0] $end
$var reg 1 .$ alt $end
$upscope $end
$scope task TESTCASE $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 Y#
b10 X#
b101 W#
b111 V#
b100 U#
b1 T#
b0 S#
b0 R#
b110 Q#
b101 P#
b11 O#
b111 N#
b10 M#
b1 L#
b100 K#
b0 J#
b0 )#
b110 (#
b101 '#
b11 &#
b111 %#
b10 $#
b1 ##
b100 "#
b0 !#
b110 +"
b10 *"
b101 )"
b111 ("
b100 '"
b1 &"
b0 %"
b0 $"
b1 #"
b110 ""
b101 !"
b11 ~
b111 }
b10 |
b1 {
b100 z
b0 y
b1 C
b0 B
b1 A
$end
#0
$dumpvars
x.$
bx -$
bx ,$
bx +$
bx *$
x)$
bx ($
bx '$
bx &$
bx %$
x$$
bx #$
bx "$
bx !$
bx ~#
x}#
bx |#
bx {#
bx z#
bx y#
bx x#
bx w#
bx v#
bx u#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
bx k#
bx j#
bx i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
bx [#
bx Z#
bx I#
bx H#
bx G#
xF#
bx E#
bx D#
bx C#
bx B#
bx A#
x@#
x?#
bx >#
bx =#
x<#
x;#
bx :#
bx 9#
x8#
x7#
x6#
x5#
x4#
bx 3#
bx 2#
bx 1#
x0#
x/#
bx .#
bx -#
x,#
x+#
bx *#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
xt"
1s"
bx r"
bx q"
bx p"
xo"
xn"
bx m"
xl"
bx k"
xj"
bx i"
0h"
xg"
bx f"
xe"
bx d"
bx c"
bx b"
bx a"
0`"
0_"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
xT"
bx S"
bx R"
bx Q"
bx P"
xO"
xN"
0M"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
bx E"
bx D"
bx C"
xB"
bx A"
bx @"
x?"
bx >"
bx ="
bx <"
bx ;"
x:"
x9"
bx 8"
x7"
bx 6"
x5"
x4"
x3"
x2"
x1"
bx 0"
x/"
bx ."
bx -"
bx ,"
bx x
bx w
xv
xu
xt
xs
xr
xq
xp
bx o
xn
bx m
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
bx a
x`
x_
x^
x]
x\
x[
xZ
xY
bx X
xW
xV
xU
bx T
bx S
bx R
xQ
xP
xO
xN
bx M
bx L
bx K
bx J
xI
bx H
bx G
bx F
bx E
bx D
bx @
bx ?
x>
x=
bx <
x;
bx :
x9
18
17
16
bx 5
14
13
bx 2
bx 1
10
0/
0.
bx -
x,
bx +
bx *
x)
1(
x'
1&
1%
1$
1#
1"
0!
$end
#5
0t"
0=
0o"
09
0;
0n
b11 m
b11 [#
0N
0O
0f
0c
0d
0j
0l
0k
0e
0b
0i
0h
0g
0r
0t
0q
0s
b0 J
b0 b#
0[
0Z
0Y
0Q
0u
0\
0]
0^
b111 M
b111 _#
0I
0v
0W
0P
b0 x
b0 Z#
b0 L
b0 `#
b0 K
b0 a#
0p
0U
0V
b0 a
b0 \#
0_
0`
b100 G
b100 c#
b1 H
b1 ]#
0F#
b0 ^"
b0 k#
b0 ]"
b0 j#
08#
0<#
0@#
0?#
04#
b1 *#
bx0xxxx0x o
bx0xxxx0x .#
b0 }"
b0 X
b0 ^#
b0 E#
b0 I#
b0 G#
b0 H#
b0 b"
b1 Q"
b1 d"
b1111111111111111 c"
b1 R"
b0 f"
1:"
02"
0H"
1>
1,
1)
b0 ;"
b1 :
b1 u"
b1 <
b1 p"
0O"
0L"
0B"
09"
0j"
0T"
0e"
b0 ."
b0 y"
0l"
05"
01"
b0 V"
0/"
b1111111111111111 a"
b0 U"
b0 @"
b11111111 ="
b11111111 0"
b11111111 <"
b11111111 |"
b11111111 A#
b11111111 -"
b0 *
b0 ?
b0 m"
b0 r"
b0 E"
b0 k"
b0 D"
b0 ~"
b0 C#
b0 C"
b0 B#
b0 i"
b0 -
b0 @
b0 ,"
b0 >"
b0 P"
0g"
1'
04"
03"
0N"
0J"
0I"
0G"
0K"
07"
0?"
b0 S"
b1 v"
b1 q"
b1 D#
b0 D
b0 E
1!
1/
#10
0!
0/
#15
b0 Y"
b0 e#
b0 W"
b0 d#
b11 ["
b11 f#
b0 Z"
b0 X"
1!
1/
#20
0!
0/
#25
1!
1/
#30
0!
0/
0"
00
#35
b11000110 w
b11000110 1#
b11000110 2#
00#
1,#
15#
16#
17#
1+#
b110 9#
b110 :#
0;#
0/#
b11000110 3#
b11 =#
b11 >#
b10 :
b10 u"
1n"
b11100011 6"
b11100011 z"
b11100011 8"
b11100011 {"
b1110001100111011 \"
1O"
0'
b10 v"
b1 r"
1F#
b1 b"
b1110001100111100 A"
b0 c"
b10000001 o
b10000001 .#
1!
1/
b11100011 ($
b10100010110100 '$
b0 a"
b1111001100011011 u#
b11111101 q#
b10100011111101 R
b101000 p#
b10100011111101 v#
b0 w#
b0 y#
b0 {#
b100101 t#
b1110111 s#
b111011100100101 x#
b1001010 r#
b101101 i#
b10110101001010 z#
b111011 m#
b111011 o#
b111011 h#
b1110001100111011 T
b11100011 l#
b1110001100111011 S
b11100011 n#
b11100011 g#
b1110001100111011 |#
b0 ="
b0 0"
b10001111 <"
b10001111 |"
b10001111 A#
b11110110 -"
0.$
0)$
b0 +$
b0 ,$
b0 *$
b111101101000111111100011001110110010110101001010011101110010010100000000000000000000000000000000000000000000000000000000000000000010100011111101111100110001101100000000000000000000000000000000 -$
#40
b11011101 +
b11011101 5
b11011101 F
b11011101 2
0!
0/
#45
b100 :
b100 u"
b11100011 *
b11100011 ?
b11100011 m"
b100 v"
0&
0%
1!
1/
#50
0!
0/
#55
b11 x
b11 Z#
b11011101 ^"
b11011101 k#
b11011101 ]"
b11011101 j#
b11011101 f"
b10000001 o
b10000001 .#
b11000110 2#
b1000 *#
b11011101 ;"
b1000 :
b1000 u"
b11101 }"
b11 X
b11 ^#
b11 E#
b11 I#
b101 G#
b1 H#
b10100011011010 b"
b10 Q"
b1111111111011101 d"
b10100011111101 c"
b11011101 D
b11011101 E
1&
1%
b1000 v"
1'
0$
0s"
b11011101 C"
b11011101 B#
b1 P"
b1 U"
1!
1/
#60
0!
0/
#65
1h"
b1 b"
b1 d"
b0 c"
b10000 :
b10000 u"
1o"
b10000 v"
0&
1!
1/
#70
0!
0/
#75
0h"
b10 :
b10 u"
0o"
b11111111 w
b11111111 1#
b10111011 o
b10111011 .#
b11111111 2#
0,#
18#
07#
0+#
1<#
b11111111 3#
1@#
14#
1&
0'
b10 v"
1$
1s"
b11 ."
b11 y"
b1 -
b1 @
b1 ,"
1!
1/
#80
b11001011 +
b11001011 5
b11001011 F
b11001011 2
0!
0/
#85
b11000110 w
b11000110 1#
b10000001 o
b10000001 .#
b11000110 2#
1,#
08#
17#
1+#
0<#
b11000110 3#
0@#
04#
b100 :
b100 u"
b0 ."
b0 y"
b100 v"
0&
0%
1!
1/
#90
0!
0/
#95
b1 x
b1 Z#
b11001011 ^"
b11001011 k#
b11001011 ]"
b11001011 j#
0F#
b11001011 f"
b10000001 o
b10000001 .#
b11000110 2#
b10 *#
b11001011 ;"
b1000 :
b1000 u"
b1011 }"
b1 X
b1 ^#
b1 E#
b1 I#
b11 G#
b0 H#
1M"
b10100011001000 b"
b11 Q"
b1111111111001011 d"
b10100011111101 c"
b11001011 D
b11001011 E
1&
1%
b1000 v"
1'
0$
0s"
b1 k"
b11001011 C"
b11001011 B#
b10 P"
b1 >"
b10 U"
1!
1/
#100
0!
0/
#105
1h"
b1 b"
b1 d"
b0 c"
b10000 :
b10000 u"
1o"
b10000 v"
0&
1!
1/
#110
0!
0/
#115
1`
b11 G
b11 c#
0n"
0M"
0h"
b10 :
b10 u"
b100000 <
b100000 p"
0o"
b11000111 w
b11000111 1#
b10000001 o
b10000001 .#
b11000111 2#
b11000111 3#
1?#
14#
1&
b1 S"
b100000 q"
b100000 D#
b10 v"
1$
1s"
b1 ."
b1 y"
b10 -
b10 @
b10 ,"
b1 w"
1!
1/
#120
b10110111 +
b10110111 5
b10110111 F
b10110111 2
0!
0/
#125
b11 K
b11 a#
b11 L
b11 `#
1`
b0 X
b0 ^#
b11000110 w
b11000110 1#
b10000001 o
b10000001 .#
b11000110 2#
b11000110 3#
0?#
04#
b100 :
b100 u"
b1 D"
b1 ~"
b1 C#
1j"
b0 ."
b0 y"
b100 v"
0&
0%
1!
1/
#130
0!
0/
#135
b10110111 ^"
b10110111 k#
b10110111 ]"
b10110111 j#
b10110101001011 A"
b1110110 w
b1110110 1#
b110000 o
b110000 .#
b1110110 2#
0,#
05#
06#
07#
0+#
b1110110 3#
b11 9#
b11 :#
1;#
1/#
b1011 =#
b1011 >#
b10110111 f"
1h"
b10110111 ;"
b1000 :
b1000 u"
b101101 n#
b10110101001010 S
b1001010 o#
b1 Y"
b1 e#
b101101 l#
b10110101001010 T
b1001010 m#
b1 W"
b1 d#
1o"
b10100010110100 b"
b100 Q"
b1111111110110111 d"
b10100011111101 c"
b111011 6"
b111011 z"
b111011 8"
b111011 {"
b1 Z"
b1 X"
b10110111 D
b10110111 E
1&
1%
b1000 v"
b11 P"
1!
1/
#140
0!
0/
#145
b101 G
b101 c#
b11 L
b11 `#
b11 K
b11 a#
1`
b10010101 w
b10010101 1#
b10010100 o
b10010100 .#
b10010101 2#
10#
17#
1+#
b100 9#
b100 :#
b10010101 3#
b1010 =#
b1010 >#
1?#
14#
0h"
b1 b"
b1 d"
b0 c"
b10 :
b10 u"
b1000000 <
b1000000 p"
0o"
b10110101001010 \"
b1001010 6"
b1001010 z"
b1001010 8"
b1001010 {"
b11 V"
b10100010110100 i"
b1 ."
b1 y"
b11 -
b11 @
b11 ,"
b1000000 q"
b1000000 D#
b10 v"
1!
1/
#150
b1 +
b1 5
b1 F
b1 2
0!
0/
#155
b1110001100111100 A"
b100 :
b100 u"
b11100011 l#
b1110001100111011 T
b111011 m#
b0 W"
b0 d#
b10010100 w
b10010100 1#
b10010100 o
b10010100 .#
b10010100 2#
b10010100 3#
0?#
04#
0&
0%
b100 v"
b1001010 *
b1001010 ?
b1001010 m"
b0 V"
b0 ."
b0 y"
1!
1/
#160
0!
0/
#165
b10 M
b10 _#
b11 H
b11 ]#
b0 x
b0 Z#
b110 L
b110 `#
b1 K
b1 a#
1`
b101 G
b101 c#
1F#
b1 ^"
b1 k#
b1 ]"
b1 j#
b10000101 w
b10000101 1#
b10010100 o
b10010100 .#
b10000101 2#
b11 9#
b10000101 3#
b1011 =#
b1 *#
b1 }"
b0 E#
b0 I#
b1 G#
b1 f"
b10100011111110 b"
b101 Q"
b10110101001011 A"
b10100011111101 c"
b101101 l#
b10110101001010 T
b1001010 m#
b1 W"
b1 d#
b1 ;"
b1000 :
b1000 u"
b1110001100111011 \"
b111011 6"
b111011 z"
b100 P"
b1 C"
b1 B#
b1000 v"
b1 D
b1 E
1&
1%
1!
1/
#170
0!
0/
#175
b1001011 w
b1001011 1#
b1000 o
b1000 .#
b1001011 2#
00#
07#
0+#
b0 9#
0;#
0/#
b1001011 3#
b1 =#
b1 b"
b10100011111110 A"
b0 c"
b10000 :
b10000 u"
b11100011 n#
b1110001100111011 S
b111011 o#
b0 Y"
b0 e#
b101000 l#
b10100011111101 T
b11111101 m#
b11 W"
b11 d#
b1 6"
b1 z"
b10110101001010 \"
b1110111 p#
b111011100100101 R
b100101 q#
b10 ["
b10 f#
b0 Z"
b11 X"
b10000 v"
b11 r"
1!
1/
#180
0!
0/
#185
b111100 w
b111100 1#
b101000 o
b101000 .#
b111100 2#
b11 :#
b111100 3#
b1011 >#
1h"
b100000 :
b100000 u"
1o"
b10100011111101 \"
b111011 8"
b111011 {"
b100000 v"
1!
1/
#190
0!
0/
#195
1P
1U
b1000 x
b1000 Z#
b10 M
b10 _#
b110 L
b110 `#
b1 K
b1 a#
0`
b100 G
b100 c#
b11 H
b11 ]#
0h"
b10 :
b10 u"
b10 <
b10 p"
0o"
b10 q"
b10 D#
b10 v"
b110 V"
b10100010110100 -
b10100010110100 @
b10100010110100 ,"
b10 x"
1!
1/
#200
b11100011 +
b11100011 5
b11100011 F
b11100011 2
0!
0/
#205
b1110001100111100 A"
b100 :
b100 u"
b11100011 l#
b1110001100111011 T
b111011 m#
b0 W"
b0 d#
b111011 *
b111011 ?
b111011 m"
b0 V"
b100 v"
0&
0%
1!
1/
#210
0!
0/
#215
b11100011 ^"
b11100011 k#
b11100011 ]"
b11100011 j#
b11100011 f"
b111011100001000 b"
b10100011111110 A"
b1111111111100011 d"
b111011100100101 c"
b11100011 ;"
b1000 :
b1000 u"
b101000 l#
b10100011111101 T
b11111101 m#
b11 W"
b11 d#
b1110001100111011 \"
b11100011 D
b11100011 E
1&
1%
b1000 v"
1!
1/
#220
0!
0/
#225
1h"
b11110 w
b11110 1#
b1001 o
b1001 .#
b11110 2#
1,#
15#
17#
1+#
b110 9#
b11110 3#
b11 =#
b1 b"
b1 d"
b0 c"
b10000 :
b10000 u"
1o"
b10100011111101 \"
b11100011 6"
b11100011 z"
b10000 v"
1!
1/
#230
0!
0/
#235
1p
19
b111 M
b111 _#
0P
b0 x
b0 Z#
b1 L
b1 `#
b1 K
b1 a#
1U
b11 G
b11 c#
b11 H
b11 ]#
0h"
1n"
b10 :
b10 u"
b100 <
b100 p"
b111011 ^"
b111011 k#
b111011 ]"
b111011 j#
0o"
b11000111 w
b11000111 1#
b10000001 o
b10000001 .#
b11000111 2#
b11000111 f"
b100 q"
b100 D#
b10 v"
b10110 V"
b1000 ."
b1000 y"
1e"
1!
1/
#240
0!
0/
#245
19
b1 L
b1 `#
b1 K
b1 a#
1p
1U
b11 H
b11 ]#
b11100011 f"
b111000 w
b111000 1#
b111001 o
b111001 .#
b111000 2#
b111 9#
1;#
1/#
b111000 3#
b1101 =#
b1110001100111100 A"
b100 :
b100 u"
b11000111 ^"
b11000111 k#
b11000111 ]"
b11000111 j#
b11100011 l#
b1110001100111011 T
b111011 m#
b0 W"
b0 d#
b101000 p#
b10100011111101 R
b11111101 q#
b11 ["
b11 f#
b0 X"
b11111101 6"
b11111101 z"
b11000111 *
b11000111 ?
b11000111 m"
b10000001 <"
b10000001 |"
b10000001 A#
b0 V"
0e"
b0 ."
b0 y"
b100 v"
0&
0#
1!
1/
#250
0!
0/
#255
1h"
b1110110 w
b1110110 1#
b110000 o
b110000 .#
b1110110 2#
0,#
05#
07#
0+#
b11 9#
b1110110 3#
b1011 =#
b10100011100000 b"
b1111111111100011 d"
b10100011111101 c"
b1000 :
b1000 u"
b11000111 ^"
b11000111 k#
b11000111 ]"
b11000111 j#
1o"
b111011 6"
b111011 z"
b1110001100111011 \"
1&
1#
b1000 v"
1!
1/
#260
b11000111 +
b11000111 5
b11000111 F
b11000111 2
0!
0/
#265
b10 M
b10 _#
09
b110 L
b110 `#
b1 K
b1 a#
0p
0U
b100 G
b100 c#
b11 H
b11 ]#
0n"
0h"
b1 b"
b1 d"
b0 c"
b10 :
b10 u"
b1 <
b1 p"
b11100011 ^"
b11100011 k#
b11100011 ]"
b11100011 j#
1`"
0o"
b10001 V"
b100 -
b100 @
b100 ,"
b1 q"
b1 D#
0'
b10 v"
1!
1/
#270
bx +
bx 5
bx F
bx 2
0!
0/
#275
b11110 w
b11110 1#
b1001 o
b1001 .#
b11110 2#
1,#
15#
17#
1+#
b110 9#
0;#
0/#
b11110 3#
b11 =#
b1110001111100100 A"
b100 :
b100 u"
0`"
b11100011 6"
b11100011 z"
b1110111 p#
b111011100100101 R
b100101 q#
b10 ["
b10 f#
b11 X"
b1110001111100011 T
b11100011 m#
b1110001111100011 S
b11100011 o#
b11100011 h#
b1110001111100011 |#
0&
0%
b100 v"
b111011 *
b111011 ?
b111011 m"
b0 V"
1!
1/
#280
0!
0/
#285
1U
1q
b111 M
b111 _#
b0xxx x
b0xxx Z#
b0xxx L
b0xxx `#
b0xxx K
b0xxx a#
b1 H
b1 ]#
b11000110 w
b11000110 1#
xF#
b11100011 ^"
b11100011 k#
b11100011 ]"
b11100011 j#
16#
b110 :#
b11000110 3#
b11 >#
b10000000 *#
b10000001 o
b10000001 .#
b11000110 2#
bx }"
bx E#
bx I#
bx G#
bx H#
b11100011 f"
bx b"
b110 Q"
b10100011111110 A"
bx d"
b111011100100101 c"
b101000 l#
b10100011111101 T
b11111101 m#
b11 W"
b11 d#
bx ;"
b1000 :
b1000 u"
b1110001111100011 \"
b11100011 8"
b11100011 {"
0j"
b0 k"
b0 D"
b0 ~"
b0 C#
bx C"
bx B#
b101 P"
b100 >"
b11 U"
b10 -
b10 @
b10 ,"
0$
0s"
b1000 v"
1'
bx D
bx E
1&
1%
1!
1/
1.
0$$
0}#
b0 !$
b10 "$
b0 ~#
b111101101000000111100011110001110010110101001010011101110010010100000000000000000000000000000000000000000000000000000000000000000010100011111101111100110001101100000000000000000000000000000100 #$
b11000111 &$
b10100010110100 %$
