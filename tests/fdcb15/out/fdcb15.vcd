$date
	Mon Oct 27 14:28:13 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_fdcb15 $end
$var wire 1 ! cpu_clk $end
$var wire 1 " cpu_reset $end
$var wire 16 # io_a [15:0] $end
$var wire 1 $ cpu_wr_n $end
$var wire 1 % cpu_rfsh_n $end
$var wire 1 & cpu_rd_n $end
$var wire 1 ' cpu_mreq_n $end
$var wire 1 ( cpu_m1_n $end
$var wire 1 ) cpu_iorq_n $end
$var wire 1 * cpu_halt_n $end
$var wire 8 + cpu_do [7:0] $end
$var wire 8 , cpu_di [7:0] $end
$var wire 1 - cpu_busak_n $end
$var wire 16 . cpu_a [15:0] $end
$var reg 1 / FAIL $end
$var reg 1 0 i_clk $end
$var reg 1 1 i_reset_btn $end
$var reg 8 2 io_o [7:0] $end
$var reg 8 3 mem_o [7:0] $end
$scope module cpu $end
$var wire 1 4 busrq_n $end
$var wire 1 5 cen $end
$var wire 1 ! clk $end
$var wire 8 6 di [7:0] $end
$var wire 1 7 int_n $end
$var wire 1 8 nmi_n $end
$var wire 1 " reset $end
$var wire 1 9 wait_n $end
$var wire 1 : write $end
$var wire 7 ; tstate [6:0] $end
$var wire 1 % rfsh_n $end
$var wire 1 < no_read $end
$var wire 7 = mcycle [6:0] $end
$var wire 1 ( m1_n $end
$var wire 1 > iorq $end
$var wire 1 ? intcycle_n $end
$var wire 1 * halt_n $end
$var wire 8 @ dout [7:0] $end
$var wire 1 - busak_n $end
$var wire 16 A A [15:0] $end
$var reg 8 B di_reg [7:0] $end
$var reg 1 ) iorq_n $end
$var reg 1 ' mreq_n $end
$var reg 1 & rd_n $end
$var reg 1 $ wr_n $end
$scope module core $end
$var wire 1 C T_Res $end
$var wire 1 4 busrq_n $end
$var wire 1 5 cen $end
$var wire 1 ! clk $end
$var wire 8 D di [7:0] $end
$var wire 8 E dinst [7:0] $end
$var wire 1 7 int_n $end
$var wire 1 8 nmi_n $end
$var wire 1 " reset $end
$var wire 1 % rfsh_n $end
$var wire 1 9 wait_n $end
$var wire 1 : write $end
$var wire 3 F tstates [2:0] $end
$var wire 1 < no_read $end
$var wire 3 G mcycles_d [2:0] $end
$var wire 1 H iorq_i $end
$var wire 3 I Special_LD [2:0] $end
$var wire 4 J Set_BusB_To [3:0] $end
$var wire 4 K Set_BusA_To [3:0] $end
$var wire 3 L Set_Addr_To [2:0] $end
$var wire 1 M SetEI $end
$var wire 1 N SetDI $end
$var wire 1 O Save_ALU $end
$var wire 1 P RstP $end
$var wire 16 Q RegBusC [15:0] $end
$var wire 16 R RegBusB [15:0] $end
$var wire 16 S RegBusA [15:0] $end
$var wire 1 T Read_To_Reg $end
$var wire 1 U Read_To_Acc $end
$var wire 1 V PreserveC $end
$var wire 2 W Prefix [1:0] $end
$var wire 1 X LDZ $end
$var wire 1 Y LDW $end
$var wire 1 Z LDSPHL $end
$var wire 1 [ JumpXY $end
$var wire 1 \ JumpE $end
$var wire 1 ] Jump $end
$var wire 1 ^ Inc_WZ $end
$var wire 1 _ Inc_PC $end
$var wire 4 ` IncDec_16 [3:0] $end
$var wire 1 a I_SCF $end
$var wire 1 b I_RRD $end
$var wire 1 c I_RLD $end
$var wire 1 d I_RETN $end
$var wire 1 e I_INRC $end
$var wire 1 f I_DJNZ $end
$var wire 1 g I_CPL $end
$var wire 1 h I_CCF $end
$var wire 1 i I_BTR $end
$var wire 1 j I_BT $end
$var wire 1 k I_BC $end
$var wire 2 l IMode [1:0] $end
$var wire 1 m Halt $end
$var wire 8 n F_Out [7:0] $end
$var wire 1 o Extra_Reg_Save $end
$var wire 1 p ExchangeRp $end
$var wire 1 q ExchangeRS $end
$var wire 1 r ExchangeDH $end
$var wire 1 s ExchangeAF $end
$var wire 1 t Call $end
$var wire 1 u Arith16 $end
$var wire 8 v ALU_Q [7:0] $end
$var wire 4 w ALU_Op [3:0] $end
$var parameter 32 x Flag_C $end
$var parameter 32 y Flag_H $end
$var parameter 32 z Flag_N $end
$var parameter 32 { Flag_P $end
$var parameter 32 | Flag_S $end
$var parameter 32 } Flag_X $end
$var parameter 32 ~ Flag_Y $end
$var parameter 32 !" Flag_Z $end
$var parameter 3 "" aBC $end
$var parameter 3 #" aDE $end
$var parameter 3 $" aIOA $end
$var parameter 3 %" aNone $end
$var parameter 3 &" aSP $end
$var parameter 3 '" aXY $end
$var parameter 3 (" aZI $end
$var reg 16 )" A [15:0] $end
$var reg 8 *" ACC [7:0] $end
$var reg 4 +" ALU_Op_r [3:0] $end
$var reg 8 ," Ap [7:0] $end
$var reg 1 -" Arith16_r $end
$var reg 1 ." Auto_Wait $end
$var reg 1 /" Auto_Wait_t1 $end
$var reg 1 0" Auto_Wait_t2 $end
$var reg 1 1" BTR_r $end
$var reg 8 2" BusA [7:0] $end
$var reg 8 3" BusB [7:0] $end
$var reg 8 4" DI_Reg [7:0] $end
$var reg 8 5" F [7:0] $end
$var reg 8 6" Fp [7:0] $end
$var reg 16 7" HaltPC [15:0] $end
$var reg 8 8" I [7:0] $end
$var reg 16 9" ID16 [15:0] $end
$var reg 8 :" IR [7:0] $end
$var reg 2 ;" ISet [1:0] $end
$var reg 2 <" IStatus [1:0] $end
$var reg 1 =" IncDecZ $end
$var reg 1 >" IntCycle $end
$var reg 1 ?" IntE $end
$var reg 1 @" NMICycle $end
$var reg 1 A" NextIs_XY_Fetch $end
$var reg 1 B" No_BTR $end
$var reg 1 C" Oldnmi_n $end
$var reg 16 D" PC [15:0] $end
$var reg 16 E" PC16 [15:0] $end
$var reg 16 F" PC16_B [15:0] $end
$var reg 3 G" Pre_XY_F_M [2:0] $end
$var reg 1 H" PreserveC_r $end
$var reg 8 I" R [7:0] $end
$var reg 5 J" Read_To_Reg_r [4:0] $end
$var reg 3 K" RegAddrA [2:0] $end
$var reg 3 L" RegAddrA_r [2:0] $end
$var reg 3 M" RegAddrB [2:0] $end
$var reg 3 N" RegAddrB_r [2:0] $end
$var reg 3 O" RegAddrC [2:0] $end
$var reg 16 P" RegBusA_r [15:0] $end
$var reg 8 Q" RegCopy [7:0] $end
$var reg 8 R" RegDIH [7:0] $end
$var reg 8 S" RegDIL [7:0] $end
$var reg 16 T" SP [15:0] $end
$var reg 16 U" SP16 [15:0] $end
$var reg 16 V" SP16_A [15:0] $end
$var reg 16 W" SP16_B [15:0] $end
$var reg 1 X" Save_ALU_r $end
$var reg 8 Y" Save_Mux [7:0] $end
$var reg 1 Z" SetEI_r $end
$var reg 16 [" TmpAddr [15:0] $end
$var reg 1 \" XY_Ind $end
$var reg 2 ]" XY_State [1:0] $end
$var reg 1 ^" Z16_r $end
$var reg 1 - busak_n $end
$var reg 8 _" dout [7:0] $end
$var reg 1 * halt_n $end
$var reg 1 ? intcycle_n $end
$var reg 1 > iorq $end
$var reg 1 ( m1_n $end
$var reg 7 `" mc [6:0] $end
$var reg 7 a" mcycle [6:0] $end
$var reg 3 b" mcycles [2:0] $end
$var reg 1 c" rfsh_n_r $end
$var reg 1 d" stop $end
$var reg 7 e" ts [6:0] $end
$var reg 7 f" tstate [6:0] $end
$var reg 1 g" Alternate $end
$var reg 1 h" BusAck $end
$var reg 1 i" BusReq_s $end
$var reg 1 j" ClkEn $end
$var reg 1 k" Halt_FF $end
$var reg 1 l" INT_s $end
$var reg 1 m" IntE_FF1 $end
$var reg 1 n" IntE_FF2 $end
$var reg 1 o" NMI_s $end
$var reg 1 p" RegWEH $end
$var reg 1 q" RegWEL $end
$var reg 1 r" last_mcycle $end
$var reg 1 s" last_tstate $end
$scope function mcyc_to_number $end
$var reg 7 t" mcyc [6:0] $end
$upscope $end
$scope function number_to_bitvec $end
$var reg 3 u" num [2:0] $end
$upscope $end
$scope module i_alu $end
$var wire 4 v" ALU_Op [3:0] $end
$var wire 1 -" Arith16 $end
$var wire 8 w" BusA [7:0] $end
$var wire 8 x" BusB [7:0] $end
$var wire 8 y" BusC [7:0] $end
$var wire 8 z" F_In [7:0] $end
$var wire 6 {" IR [5:0] $end
$var wire 2 |" ISet [1:0] $end
$var wire 1 \" XY_Ind $end
$var wire 1 ^" Z16 $end
$var parameter 32 }" Flag_C $end
$var parameter 32 ~" Flag_H $end
$var parameter 32 !# Flag_N $end
$var parameter 32 "# Flag_P $end
$var parameter 32 ## Flag_S $end
$var parameter 32 $# Flag_X $end
$var parameter 32 %# Flag_Y $end
$var parameter 32 &# Flag_Z $end
$var reg 8 '# BitMask [7:0] $end
$var reg 1 (# Carry7_v $end
$var reg 1 )# Carry_v $end
$var reg 9 *# DAA_Q [8:0] $end
$var reg 8 +# F_Out [7:0] $end
$var reg 1 ,# HalfCarry_v $end
$var reg 1 -# OverFlow_v $end
$var reg 8 .# Q [7:0] $end
$var reg 8 /# Q_t [7:0] $end
$var reg 8 0# Q_v [7:0] $end
$var reg 1 1# UseCarry $end
$scope function AddSub1 $end
$var reg 1 2# A $end
$var reg 1 3# B $end
$var reg 1 4# Carry_In $end
$var reg 1 5# Sub $end
$upscope $end
$scope function AddSub3 $end
$var reg 3 6# A [2:0] $end
$var reg 3 7# B [2:0] $end
$var reg 1 8# Carry_In $end
$var reg 1 9# Sub $end
$upscope $end
$scope function AddSub4 $end
$var reg 4 :# A [3:0] $end
$var reg 4 ;# B [3:0] $end
$var reg 1 <# Carry_In $end
$var reg 1 =# Sub $end
$upscope $end
$upscope $end
$scope module mcode $end
$var wire 8 ># F [7:0] $end
$var wire 1 >" INTCycle $end
$var wire 8 ?# IR [7:0] $end
$var wire 2 @# ISet [1:0] $end
$var wire 7 A# MCycle [6:0] $end
$var wire 1 @" NMICycle $end
$var wire 1 \" XY_Ind $end
$var wire 3 B# w_cc [2:0] $end
$var wire 1 C# f_cc_true $end
$var wire 3 D# SSS [2:0] $end
$var wire 2 E# DPAIR [1:0] $end
$var wire 3 F# DDD [2:0] $end
$var parameter 32 G# Flag_C $end
$var parameter 32 H# Flag_H $end
$var parameter 32 I# Flag_N $end
$var parameter 32 J# Flag_P $end
$var parameter 32 K# Flag_S $end
$var parameter 32 L# Flag_X $end
$var parameter 32 M# Flag_Y $end
$var parameter 32 N# Flag_Z $end
$var parameter 3 O# aBC $end
$var parameter 3 P# aDE $end
$var parameter 3 Q# aIOA $end
$var parameter 3 R# aNone $end
$var parameter 3 S# aSP $end
$var parameter 3 T# aXY $end
$var parameter 3 U# aZI $end
$var reg 4 V# ALU_Op [3:0] $end
$var reg 1 u Arith16 $end
$var reg 1 t Call $end
$var reg 1 s ExchangeAF $end
$var reg 1 r ExchangeDH $end
$var reg 1 q ExchangeRS $end
$var reg 1 p ExchangeRp $end
$var reg 1 o Extra_Reg_Save $end
$var reg 1 m Halt $end
$var reg 2 W# IMode [1:0] $end
$var reg 1 H IORQ $end
$var reg 1 k I_BC $end
$var reg 1 j I_BT $end
$var reg 1 i I_BTR $end
$var reg 1 h I_CCF $end
$var reg 1 g I_CPL $end
$var reg 1 f I_DJNZ $end
$var reg 1 e I_INRC $end
$var reg 1 d I_RETN $end
$var reg 1 c I_RLD $end
$var reg 1 b I_RRD $end
$var reg 1 a I_SCF $end
$var reg 4 X# IncDec_16 [3:0] $end
$var reg 1 _ Inc_PC $end
$var reg 1 ^ Inc_WZ $end
$var reg 1 ] Jump $end
$var reg 1 \ JumpE $end
$var reg 1 [ JumpXY $end
$var reg 1 Z LDSPHL $end
$var reg 1 Y LDW $end
$var reg 1 X LDZ $end
$var reg 3 Y# MCycles [2:0] $end
$var reg 1 < NoRead $end
$var reg 2 Z# Prefix [1:0] $end
$var reg 1 V PreserveC $end
$var reg 1 U Read_To_Acc $end
$var reg 1 T Read_To_Reg $end
$var reg 1 P RstP $end
$var reg 1 O Save_ALU $end
$var reg 1 N SetDI $end
$var reg 1 M SetEI $end
$var reg 3 [# Set_Addr_To [2:0] $end
$var reg 4 \# Set_BusA_To [3:0] $end
$var reg 4 ]# Set_BusB_To [3:0] $end
$var reg 3 ^# Special_LD [2:0] $end
$var reg 3 _# TStates [2:0] $end
$var reg 1 : Write $end
$scope begin default_ed_block $end
$upscope $end
$scope begin handle_prefixes $end
$upscope $end
$upscope $end
$scope module regs $end
$var wire 3 `# AddrA [2:0] $end
$var wire 3 a# AddrB [2:0] $end
$var wire 3 b# AddrC [2:0] $end
$var wire 8 c# B [7:0] $end
$var wire 8 d# C [7:0] $end
$var wire 1 j" CEN $end
$var wire 8 e# D [7:0] $end
$var wire 8 f# DIH [7:0] $end
$var wire 8 g# DIL [7:0] $end
$var wire 8 h# DOAH [7:0] $end
$var wire 8 i# DOAL [7:0] $end
$var wire 8 j# DOBH [7:0] $end
$var wire 8 k# DOBL [7:0] $end
$var wire 8 l# DOCH [7:0] $end
$var wire 8 m# DOCL [7:0] $end
$var wire 8 n# E [7:0] $end
$var wire 8 o# H [7:0] $end
$var wire 8 p# L [7:0] $end
$var wire 1 p" WEH $end
$var wire 1 q" WEL $end
$var wire 1 ! clk $end
$var wire 16 q# IY [15:0] $end
$var wire 16 r# IX [15:0] $end
$var wire 16 s# HLp [15:0] $end
$var wire 16 t# HL [15:0] $end
$var wire 16 u# DEp [15:0] $end
$var wire 16 v# DE [15:0] $end
$var wire 16 w# BCp [15:0] $end
$var wire 16 x# BC [15:0] $end
$upscope $end
$scope begin sync_inputs $end
$upscope $end
$upscope $end
$upscope $end
$scope task ASSERT $end
$var reg 1 y# HaltFF $end
$var reg 8 z# I [7:0] $end
$var reg 2 {# IFF [1:0] $end
$var reg 2 |# IM [1:0] $end
$var reg 8 }# R [7:0] $end
$var reg 192 ~# REGS [191:0] $end
$var reg 1 !$ alt $end
$upscope $end
$scope task ASSERTMEM $end
$var reg 16 "$ addr [15:0] $end
$var reg 8 #$ expected [7:0] $end
$upscope $end
$scope task RESULT $end
$upscope $end
$scope task SETFAIL $end
$upscope $end
$scope task SETMEM $end
$var reg 16 $$ addr [15:0] $end
$var reg 8 %$ value [7:0] $end
$upscope $end
$scope task SETUP $end
$var reg 1 &$ HaltFF $end
$var reg 8 '$ I [7:0] $end
$var reg 2 ($ IFF [1:0] $end
$var reg 2 )$ IM [1:0] $end
$var reg 8 *$ R [7:0] $end
$var reg 192 +$ REGS [191:0] $end
$var reg 1 ,$ alt $end
$upscope $end
$scope task TESTCASE $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 U#
b10 T#
b101 S#
b111 R#
b100 Q#
b1 P#
b0 O#
b110 N#
b101 M#
b11 L#
b111 K#
b10 J#
b1 I#
b100 H#
b0 G#
b110 &#
b101 %#
b11 $#
b111 ##
b10 "#
b1 !#
b100 ~"
b0 }"
b110 ("
b10 '"
b101 &"
b111 %"
b100 $"
b1 #"
b0 ""
b110 !"
b101 ~
b11 }
b111 |
b10 {
b1 z
b100 y
b0 x
$end
#0
$dumpvars
x,$
bx +$
bx *$
bx )$
bx ($
bx '$
x&$
bx %$
bx $$
bx #$
bx "$
x!$
bx ~#
bx }#
bx |#
bx {#
bx z#
xy#
bx x#
bx w#
bx v#
bx u#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
bx k#
bx j#
bx i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
bx [#
bx Z#
bx Y#
bx X#
bx W#
bx V#
bx F#
bx E#
bx D#
xC#
bx B#
bx A#
bx @#
bx ?#
bx >#
x=#
x<#
bx ;#
bx :#
x9#
x8#
bx 7#
bx 6#
x5#
x4#
x3#
x2#
x1#
bx 0#
bx /#
bx .#
x-#
x,#
bx +#
bx *#
x)#
x(#
bx '#
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
1j"
0i"
0h"
0g"
bx f"
bx e"
xd"
1c"
bx b"
bx a"
bx `"
bx _"
x^"
bx ]"
x\"
bx ["
xZ"
bx Y"
xX"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
xH"
bx G"
bx F"
bx E"
bx D"
xC"
xB"
0A"
x@"
x?"
x>"
x="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
x1"
x0"
x/"
x."
x-"
bx ,"
bx +"
bx *"
bx )"
bx w
bx v
xu
xt
xs
xr
xq
xp
xo
bx n
xm
bx l
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
bx `
x_
x^
x]
x\
x[
xZ
xY
xX
bx W
xV
xU
xT
bx S
bx R
bx Q
xP
xO
xN
xM
bx L
bx K
bx J
bx I
xH
bx G
bx F
bx E
bx D
0C
bx B
bx A
bx @
x?
x>
bx =
x<
bx ;
x:
19
18
17
bx 6
15
14
bx 3
bx 2
11
00
0/
bx .
x-
bx ,
bx +
x*
1)
x(
1'
1&
1%
1$
b10000xxxxxxxx #
1"
0!
$end
#5
0d"
0>
0:
0<
0m
b11 l
b11 W#
0M
0N
0e
0b
0c
0i
0k
0j
0d
0a
0h
0g
0f
0q
0s
0p
0r
b0 I
b0 ^#
0Z
0Y
0X
0P
0t
0[
0\
0]
b111 L
b111 [#
0H
0u
0V
0O
b0 w
b0 V#
b0 K
b0 \#
b0 J
b0 ]#
0o
0T
0U
b0 `
b0 X#
0^
0_
b100 F
b100 _#
b1 G
b1 Y#
0C#
b0 v
b0 .#
b0 /#
b0 S"
b0 g#
b0 R"
b0 f#
0-#
0)#
02#
03#
05#
04#
0(#
b0 6#
b0 7#
09#
08#
0,#
b0 0#
b0 :#
b0 ;#
0=#
0<#
01#
b1 '#
b1000000 n
b1000000 +#
b0 {"
b0 W
b0 Z#
b0 B#
b0 F#
b0 D#
b0 E#
b0 y"
b1000000000000 #
b0 U"
b1 E"
b1 W"
b1111111111111111 V"
b1 F"
b0 Y"
b0xx M"
b0xx a#
b0xx K"
b0xx `#
0."
0?"
1?
1-
1*
b0 4"
b1 ;
b1 e"
b1 =
b1 `"
b0xx O"
b0xx b#
b0xx N"
b0xx L"
b0 2"
b0 w"
b0 3"
b0 x"
0C"
0\"
0H"
0X"
b0 +"
b0 v"
0^"
01"
0-"
b0 J"
b1111111111111111 T"
b0 I"
b0 8"
b11111111 6"
b11111111 ,"
b11111111 5"
b11111111 z"
b11111111 >#
b11111111 *"
b0 +
b0 @
b0 _"
b0 b"
b0 <"
b0 ]"
b0 ;"
b0 |"
b0 @#
b0 :"
b0 ?#
b0 ["
b0 .
b0 A
b0 )"
b0 7"
b0 D"
0Z"
1(
00"
0/"
0B"
0>"
0@"
b0 G"
b1 f"
b1 a"
b1 A#
b0 B
b0 D
1!
10
#10
0!
00
#15
bx v
bx .#
bx0xxxx0x n
bx0xxxx0x +#
bx /#
x-#
x)#
x2#
x3#
x4#
x(#
bx 6#
bx 7#
x8#
x,#
bx 0#
bx :#
bx ;#
b0 M"
b0 a#
b0 K"
b0 `#
bx 2"
bx w"
bx 3"
bx x"
b11 O"
b11 b#
b0 N"
b0 L"
1!
10
#20
0!
00
#25
1!
10
#30
0!
00
0"
01
#35
b101010 v
b101010 .#
b101010 /#
1-#
1)#
12#
13#
04#
0(#
b1 6#
b1 7#
08#
0,#
b101010 0#
b101 :#
b101 ;#
b10 ;
b10 e"
1r"
b10010101 2"
b10010101 w"
b10010101 3"
b10010101 x"
b1001010100110010 P"
1C"
0(
b10 f"
b1 b"
b1 U"
b1001010100110011 9"
b0 V"
b101101 n
b101101 +#
1!
10
b10010 %$
b10110110010010 $$
b0 T"
b10110101111011 q#
b100111 m#
b1110001100100111 Q
b11100011 l#
b1110001100100111 r#
b0 s#
b0 u#
b0 w#
b11100 p#
b1110101 o#
b111010100011100 t#
b110001 n#
b10000110 e#
b1000011000110001 v#
b110010 i#
b110010 k#
b110010 d#
b1001010100110010 S
b10010101 h#
b1001010100110010 R
b10010101 j#
b10010101 c#
b1001010100110010 x#
b0 6"
b0 ,"
b1100100 5"
b1100100 z"
b1100100 >#
b101000 *"
0,$
0&$
b0 )$
b0 ($
b0 *$
b0 '$
b1010000110010010010101001100101000011000110001011101010001110000000000000000000000000000000000000000000000000000000000000000001110001100100111001011010111101100000000000000000000000000000000 +$
#40
b11111101 ,
b11111101 6
b11111101 E
b11111101 3
0!
00
#45
b100 ;
b100 e"
b10010101 +
b10010101 @
b10010101 _"
b100 f"
0'
0&
1!
10
#50
0!
00
#55
b111 w
b111 V#
b11111101 S"
b11111101 g#
b11111101 R"
b11111101 f#
b11111101 Y"
b101101 n
b101101 +#
b101010 /#
b10000000 '#
b11111101 4"
b1000 ;
b1000 e"
b111101 {"
b11 W
b11 Z#
b111 B#
b111 F#
b101 D#
b11 E#
b1110001100100100 U"
b10 E"
b1111111111111101 W"
b1110001100100111 V"
b11111101 B
b11111101 D
1'
1&
b1000 f"
1(
0%
0c"
b11111101 :"
b11111101 ?#
b1 D"
b1 I"
1!
10
#60
0!
00
#65
b1 U"
b1 W"
b0 V"
b10000 ;
b10000 e"
1C
1s"
b10000 f"
0'
1!
10
#70
0!
00
#75
b10 ;
b10 e"
0C
0s"
b0 v
b0 .#
b1000010 n
b1000010 +#
b0 /#
0-#
15#
14#
1(#
19#
18#
1,#
b0 0#
1=#
1<#
b1000000000001 #
1'
0(
b10 f"
1%
1c"
b111 +"
b111 v"
b1 .
b1 A
b1 )"
1!
10
#80
b11001011 ,
b11001011 6
b11001011 E
b11001011 3
0!
00
#85
b101010 v
b101010 .#
b101101 n
b101101 +#
b101010 /#
1-#
05#
04#
0(#
09#
08#
0,#
b101010 0#
0=#
0<#
b100 ;
b100 e"
b0 +"
b0 v"
b100 f"
0'
0&
1!
10
#90
0!
00
#95
b1 w
b1 V#
b11001011 S"
b11001011 g#
b11001011 R"
b11001011 f#
1C#
b11001011 Y"
b101101 n
b101101 +#
b101010 /#
b10 '#
b11001011 4"
b1000 ;
b1000 e"
b1011 {"
b1 W
b1 Z#
b1 B#
b1 F#
b11 D#
b0 E#
1A"
b1110001011110010 U"
b11 E"
b1111111111001011 W"
b1110001100100111 V"
b11001011 B
b11001011 D
1'
1&
b1000 f"
1(
0%
0c"
b10 ]"
b11001011 :"
b11001011 ?#
b10 D"
b1 7"
b10 I"
1!
10
#100
0!
00
#105
b1 U"
b1 W"
b0 V"
b10000 ;
b10000 e"
1C
1s"
b10000 f"
0'
1!
10
#110
0!
00
#115
1_
b11 F
b11 _#
0r"
0A"
b10 ;
b10 e"
b100000 =
b100000 `"
0C
0s"
b101101 n
b101101 +#
b101010 /#
11#
b1000000000010 #
1'
b1 G"
b100000 a"
b100000 A#
b10 f"
1%
1c"
b1 +"
b1 v"
b10 .
b10 A
b10 )"
b1 t"
1!
10
#120
b10111 ,
b10111 6
b10111 E
b10111 3
0!
00
#125
b11 G
b11 Y#
1o
b110 J
b110 ]#
b11 K
b11 \#
1_
b0 W
b0 Z#
b101101 n
b101101 +#
b101010 /#
01#
b100 ;
b100 e"
b101101 l#
b10110101111011 Q
b1111011 m#
b111 O"
b111 b#
b1 ;"
b1 |"
b1 @#
1\"
b0 +"
b0 v"
b100 f"
0'
0&
1!
10
#130
0!
00
#135
b10111 S"
b10111 g#
b10111 R"
b10111 f#
b1000011000110010 9"
b11111101 v
b11111101 .#
b10101000 n
b10101000 +#
b11111101 /#
0-#
0)#
02#
b11 6#
b100 7#
b11111101 0#
b10 :#
b1011 ;#
b10111 Y"
b10111 4"
b1000 ;
b1000 e"
b11100011 j#
b1110001100100111 R
b100111 k#
b11 M"
b11 a#
b10000110 h#
b1000011000110001 S
b110001 i#
b1 K"
b1 `#
1C
1s"
b10110110010010 U"
b100 E"
b10111 W"
b10110101111011 V"
b110010 2"
b110010 w"
b11001011 3"
b11001011 x"
b101101 l#
b10110101111011 Q
b1111011 m#
b111 O"
b111 b#
b11 N"
b1 L"
b10111 B
b10111 D
1'
1&
b1000 f"
b11 D"
b11 b"
1!
10
#140
0!
00
#145
b101 F
b101 _#
b10 L
b10 [#
b11 K
b11 \#
b11 J
b11 ]#
1o
1_
b11 G
b11 Y#
b101101 y"
b1001000 v
b1001000 .#
b1000 n
b1000 +#
b1001000 /#
03#
b1 7#
b1001000 0#
b1 :#
b111 ;#
11#
b1000000000011 #
b1 U"
b1 W"
b0 V"
b10 ;
b10 e"
b1000000 =
b1000000 `"
0C
0s"
b1000011000110001 P"
b101101 l#
b10110101111011 Q
b1111011 m#
b111 O"
b111 b#
b110001 2"
b110001 w"
b10111 3"
b10111 x"
b11 J"
b10110110010010 ["
b1 +"
b1 v"
b11 .
b11 A
b11 )"
b1000000 a"
b1000000 A#
b10 f"
1!
10
#150
b10101 ,
b10101 6
b10101 E
b10101 3
0!
00
#155
b1001010100110011 9"
b100 ;
b100 e"
b10000110 j#
b1000011000110001 R
b110001 k#
b1 M"
b1 a#
b10010101 h#
b1001010100110010 S
b110010 i#
b0 K"
b0 `#
b1011000 v
b1011000 .#
b1000 n
b1000 +#
b1011000 /#
b1011000 0#
b10 7#
01#
b100111 3"
b100111 x"
b1110101 l#
b111010100011100 Q
b11100 m#
b10 O"
b10 b#
b1 N"
0'
0&
b100 f"
b10111 +
b10111 @
b10111 _"
b0 J"
b0 +"
b0 v"
1!
10
#160
0!
00
#165
b10 L
b10 [#
b10 w
b10 V#
b101 K
b101 \#
b101 J
b101 ]#
1o
1_
b101 F
b101 _#
b11 G
b11 Y#
b10101 S"
b10101 g#
b10101 R"
b10101 f#
b1100011 v
b1100011 .#
b100000 n
b100000 +#
b1100011 /#
b11 7#
b1100011 0#
b10 :#
b1 ;#
b100 '#
b10101 {"
b10 B#
b10 F#
b101 D#
b1 E#
b10101 Y"
b111010100110001 U"
b101 E"
b1000011000110010 9"
b10101 W"
b111010100011100 V"
b10000110 h#
b1000011000110001 S
b110001 i#
b1 K"
b1 `#
b10101 4"
b1000 ;
b1000 e"
b1001010100110010 P"
b110010 2"
b110010 w"
b110001 3"
b110001 x"
b100 D"
b10101 :"
b10101 ?#
b1000 f"
b10101 B
b10101 D
1'
1&
1!
10
#170
0!
00
#175
b1100010 v
b1100010 .#
b100000 n
b100000 +#
b1100010 /#
b1100010 0#
b1 :#
b1 U"
b111010100011101 9"
b1 W"
b0 V"
b10000 ;
b10000 e"
b1110101 j#
b111010100011100 R
b11100 k#
b10 M"
b10 a#
b1110101 h#
b111010100011100 S
b11100 i#
b10 K"
b10 `#
b110001 2"
b110001 w"
b1000011000110001 P"
b10 N"
b10 L"
b10000 f"
1!
10
#180
0!
00
#185
b111000 v
b111000 .#
b111000 n
b111000 +#
b111000 /#
b1 6#
b1 7#
18#
1,#
b111000 0#
b1100 :#
b1100 ;#
b100000 ;
b100000 e"
1C
1s"
b111010100011100 P"
b11100 2"
b11100 w"
b11100 3"
b11100 x"
b100000 f"
1!
10
#190
0!
00
#195
1O
1T
b1000 w
b1000 V#
b10 L
b10 [#
b110 K
b110 \#
b101 J
b101 ]#
1o
0_
b100 F
b100 _#
b11 G
b11 Y#
b10 ;
b10 e"
b10 =
b10 `"
0C
0s"
b0 v
b0 .#
b1000010 n
b1000010 +#
b0 /#
1)#
15#
14#
1(#
19#
b0 0#
1=#
1<#
b1000010010010 #
b10 a"
b10 A#
b10 f"
b101 J"
b10 +"
b10 v"
b10110110010010 .
b10110110010010 A
b10110110010010 )"
b10 u"
1!
10
#200
b10010 ,
b10010 6
b10010 E
b10010 3
0!
00
#205
b110001 v
b110001 .#
b110000 n
b110000 +#
b110001 /#
0)#
05#
04#
0(#
09#
b110001 0#
b101 :#
0=#
0<#
b1001010100110011 9"
b100 ;
b100 e"
b10010101 h#
b1001010100110010 S
b110010 i#
b0 K"
b0 `#
b11 L"
b10101 2"
b10101 w"
b11100 +
b11100 @
b11100 _"
b0 J"
b0 +"
b0 v"
b100 f"
0'
0&
1!
10
#210
0!
00
#215
b10010 S"
b10010 g#
b10010 R"
b10010 f#
b10010 Y"
b111010100101110 U"
b1110001100101000 9"
b10010 W"
b111010100011100 V"
b10010 4"
b1000 ;
b1000 e"
b11100011 h#
b1110001100100111 S
b100111 i#
b11 K"
b11 `#
b1001010100110010 P"
b10010 B
b10010 D
1'
1&
b1000 f"
1!
10
#220
0!
00
#225
b101110 v
b101110 .#
b101000 n
b101000 +#
b101110 /#
08#
0,#
b101110 0#
b10 :#
b1 U"
b1 W"
b0 V"
b10000 ;
b10000 e"
1C
1s"
b1110001100100111 P"
b10010 2"
b10010 w"
b10000 f"
1!
10
#230
0!
00
#235
1:
b111 L
b111 [#
0O
b10 w
b10 V#
b101 K
b101 \#
b101 J
b101 ]#
1o
1T
b11 F
b11 _#
b11 G
b11 Y#
1r"
b10 ;
b10 e"
b100 =
b100 `"
b100100 S"
b100100 g#
b100100 R"
b100100 f#
0C
0s"
b100100 v
b100100 .#
b100100 n
b100100 +#
b100100 /#
b100100 Y"
b100 a"
b100 A#
b10 f"
b10110 J"
b1000 +"
b1000 v"
1X"
1!
10
#240
0!
00
#245
1:
b101 K
b101 \#
b101 J
b101 ]#
1o
1T
b11 G
b11 Y#
b10010 S"
b10010 g#
b10010 R"
b10010 f#
b10010 Y"
b1000011 v
b1000011 .#
b10000 n
b10000 +#
b1000011 /#
b10 6#
18#
1,#
b1000011 0#
b111 :#
b1001010100110011 9"
b100 ;
b100 e"
b10010101 h#
b1001010100110010 S
b110010 i#
b0 K"
b0 `#
b11100011 l#
b1110001100100111 Q
b100111 m#
b11 O"
b11 b#
b10 L"
b100111 2"
b100111 w"
b100100 Q"
b100100 +
b100100 @
b100100 _"
b100100 5"
b100100 z"
b100100 >#
b0 J"
0X"
b0 +"
b0 v"
b100 f"
0'
0$
1!
10
#250
0!
00
#255
b1001110 v
b1001110 .#
b1000 n
b1000 +#
b1001110 /#
b11 6#
08#
0,#
b1001110 0#
b10 :#
b1110001100111001 U"
b111010100011101 9"
b10010 W"
b1110001100100111 V"
b1000 ;
b1000 e"
b1110101 h#
b111010100011100 S
b11100 i#
b10 K"
b10 `#
1C
1s"
b110010 2"
b110010 w"
b1001010100110010 P"
1'
1$
b1000 f"
1!
10
#260
b100100 ,
b100100 6
b100100 E
b100100 3
0!
00
#265
b10 L
b10 [#
0:
b101 K
b101 \#
b101 J
b101 ]#
1o
0T
b100 F
b100 _#
b11 G
b11 Y#
b0 v
b0 .#
b1000010 n
b1000010 +#
b0 /#
1)#
15#
14#
1(#
b1 6#
19#
18#
1,#
b0 0#
b1100 :#
1=#
1<#
b1000000000100 #
0r"
b1 U"
b1 W"
b0 V"
b10 ;
b10 e"
b1 =
b1 `"
b100100 S"
b100100 g#
b100100 R"
b100100 f#
1q"
0C
0s"
b111010100011100 P"
b11100 2"
b11100 w"
b10101 J"
b10 +"
b10 v"
b100 .
b100 A
b100 )"
b1 a"
b1 A#
0(
b10 f"
1!
10
#270
bx ,
bx 6
bx E
bx 3
0!
00
#275
b1001010100110011 9"
b100 ;
b100 e"
b10010101 h#
b0 K"
b0 `#
b100100 S"
b100100 g#
b100100 R"
b100100 f#
b111000 v
b111000 .#
b111000 n
b111000 +#
b111000 /#
0)#
05#
04#
0(#
09#
b111000 0#
0=#
0<#
0q"
b1110101 l#
b111010100100100 Q
b100100 m#
b10 O"
b10 b#
b1001010100110010 S
b110010 i#
b111010100100100 R
b100100 k#
b100100 p#
b111010100100100 t#
0'
0&
b100 f"
b11100 +
b11100 @
b11100 _"
b0 J"
b0 +"
b0 v"
1!
10
#280
0!
00
#285
1T
1p
b111 L
b111 [#
b0xxx w
b0xxx V#
b0xxx K
b0xxx \#
b0xxx J
b0xxx ]#
0o
b1 G
b1 Y#
b1010110 v
b1010110 .#
xC#
b11 6#
b10 7#
08#
0,#
b1010110 0#
b10 :#
b100 ;#
b10000000 '#
b0 n
b0 +#
b1010110 /#
bx {"
bx B#
bx F#
bx D#
bx E#
b100100 Y"
b1000000000010 #
bx U"
b110 E"
b111010100100101 9"
bx W"
b111010100100100 V"
b100100 S"
b100100 g#
b100100 R"
b100100 f#
b1110101 h#
b111010100100100 S
b100100 i#
b10 K"
b10 `#
bx 4"
b1000 ;
b1000 e"
b1001010100110010 P"
b110010 2"
b110010 w"
b100100 3"
b100100 x"
0\"
b0 ]"
b0 ;"
b0 |"
b0 @#
bx :"
bx ?#
b101 D"
b100 7"
b11 I"
b10 .
b10 A
b10 )"
0%
0c"
b1000 f"
1(
bx B
bx D
1'
1&
1!
10
0!$
0y#
b0 |#
b0 {#
b10 }#
b0 z#
b1010000010010010010101001100101000011000110001011101010010010000000000000000000000000000000000000000000000000000000000000000001110001100100111001011010111101100000000000000000000000000000100 ~#
b100100 #$
b10110110010010 "$
