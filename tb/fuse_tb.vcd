$date
	Sat Oct 18 20:07:34 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb $end
$var wire 1 ! cpu_clk $end
$var wire 1 " cpu_reset $end
$var wire 1 # cpu_wr_n $end
$var wire 1 $ cpu_rfsh_n $end
$var wire 1 % cpu_rd_n $end
$var wire 1 & cpu_mreq_n $end
$var wire 1 ' cpu_m1_n $end
$var wire 1 ( cpu_iorq_n $end
$var wire 1 ) cpu_halt_n $end
$var wire 8 * cpu_do [7:0] $end
$var wire 8 + cpu_di [7:0] $end
$var wire 1 , cpu_busak_n $end
$var wire 16 - cpu_a [15:0] $end
$var reg 1 . FAIL $end
$var reg 385 / TESTCASE [0:384] $end
$var reg 1 0 i_clk $end
$var reg 1 1 i_reset_btn $end
$var reg 8 2 io_o [7:0] $end
$var reg 8 3 mem_o [7:0] $end
$scope module cpu $end
$var wire 1 4 busrq_n $end
$var wire 1 5 cen $end
$var wire 1 ! clk $end
$var wire 8 6 di [7:0] $end
$var wire 1 7 int_n $end
$var wire 1 8 nmi_n $end
$var wire 1 " reset $end
$var wire 1 9 wait_n $end
$var wire 1 : write $end
$var wire 7 ; tstate [6:0] $end
$var wire 1 $ rfsh_n $end
$var wire 1 < no_read $end
$var wire 7 = mcycle [6:0] $end
$var wire 1 ' m1_n $end
$var wire 1 > iorq $end
$var wire 1 ? intcycle_n $end
$var wire 1 ) halt_n $end
$var wire 8 @ dout [7:0] $end
$var wire 1 , busak_n $end
$var wire 16 A A [15:0] $end
$var parameter 32 B IOWait $end
$var parameter 32 C Mode $end
$var parameter 32 D T2Write $end
$var reg 8 E di_reg [7:0] $end
$var reg 1 ( iorq_n $end
$var reg 1 & mreq_n $end
$var reg 1 % rd_n $end
$var reg 1 # wr_n $end
$scope module core $end
$var wire 1 4 busrq_n $end
$var wire 1 5 cen $end
$var wire 1 ! clk $end
$var wire 8 F di [7:0] $end
$var wire 8 G dinst [7:0] $end
$var wire 1 7 int_n $end
$var wire 1 8 nmi_n $end
$var wire 1 " reset $end
$var wire 1 $ rfsh_n $end
$var wire 1 9 wait_n $end
$var wire 1 : write $end
$var wire 3 H tstates [2:0] $end
$var wire 1 < no_read $end
$var wire 3 I mcycles_d [2:0] $end
$var wire 1 J iorq_i $end
$var wire 3 K Special_LD [2:0] $end
$var wire 4 L Set_BusB_To [3:0] $end
$var wire 4 M Set_BusA_To [3:0] $end
$var wire 3 N Set_Addr_To [2:0] $end
$var wire 1 O SetEI $end
$var wire 1 P SetDI $end
$var wire 1 Q Save_ALU $end
$var wire 1 R RstP $end
$var wire 16 S RegBusC [15:0] $end
$var wire 16 T RegBusB [15:0] $end
$var wire 16 U RegBusA [15:0] $end
$var wire 1 V Read_To_Reg $end
$var wire 1 W Read_To_Acc $end
$var wire 1 X PreserveC $end
$var wire 2 Y Prefix [1:0] $end
$var wire 1 Z LDZ $end
$var wire 1 [ LDW $end
$var wire 1 \ LDSPHL $end
$var wire 1 ] JumpXY $end
$var wire 1 ^ JumpE $end
$var wire 1 _ Jump $end
$var wire 1 ` Inc_WZ $end
$var wire 1 a Inc_PC $end
$var wire 4 b IncDec_16 [3:0] $end
$var wire 1 c I_SCF $end
$var wire 1 d I_RRD $end
$var wire 1 e I_RLD $end
$var wire 1 f I_RETN $end
$var wire 1 g I_INRC $end
$var wire 1 h I_DJNZ $end
$var wire 1 i I_CPL $end
$var wire 1 j I_CCF $end
$var wire 1 k I_BTR $end
$var wire 1 l I_BT $end
$var wire 1 m I_BC $end
$var wire 2 n IMode [1:0] $end
$var wire 1 o Halt $end
$var wire 8 p F_Out [7:0] $end
$var wire 1 q Extra_Reg_Save $end
$var wire 1 r ExchangeRp $end
$var wire 1 s ExchangeRS $end
$var wire 1 t ExchangeDH $end
$var wire 1 u ExchangeAF $end
$var wire 1 v Call $end
$var wire 1 w Arith16 $end
$var wire 8 x ALU_Q [7:0] $end
$var wire 4 y ALU_Op [3:0] $end
$var parameter 32 z Flag_C $end
$var parameter 32 { Flag_H $end
$var parameter 32 | Flag_N $end
$var parameter 32 } Flag_P $end
$var parameter 32 ~ Flag_S $end
$var parameter 32 !" Flag_X $end
$var parameter 32 "" Flag_Y $end
$var parameter 32 #" Flag_Z $end
$var parameter 32 $" IOWait $end
$var parameter 32 %" Mode $end
$var parameter 3 &" aBC $end
$var parameter 3 '" aDE $end
$var parameter 3 (" aIOA $end
$var parameter 3 )" aNone $end
$var parameter 3 *" aSP $end
$var parameter 3 +" aXY $end
$var parameter 3 ," aZI $end
$var reg 16 -" A [15:0] $end
$var reg 8 ." ACC [7:0] $end
$var reg 4 /" ALU_Op_r [3:0] $end
$var reg 1 0" Alternate $end
$var reg 8 1" Ap [7:0] $end
$var reg 1 2" Arith16_r $end
$var reg 1 3" Auto_Wait $end
$var reg 1 4" Auto_Wait_t1 $end
$var reg 1 5" Auto_Wait_t2 $end
$var reg 1 6" BTR_r $end
$var reg 8 7" BusA [7:0] $end
$var reg 1 8" BusAck $end
$var reg 8 9" BusB [7:0] $end
$var reg 1 :" BusReq_s $end
$var reg 1 ;" ClkEn $end
$var reg 8 <" DI_Reg [7:0] $end
$var reg 8 =" F [7:0] $end
$var reg 8 >" Fp [7:0] $end
$var reg 1 ?" Halt_FF $end
$var reg 8 @" I [7:0] $end
$var reg 16 A" ID16 [15:0] $end
$var reg 1 B" INT_s $end
$var reg 8 C" IR [7:0] $end
$var reg 2 D" ISet [1:0] $end
$var reg 2 E" IStatus [1:0] $end
$var reg 1 F" IncDecZ $end
$var reg 1 G" IntCycle $end
$var reg 1 H" IntE $end
$var reg 1 I" IntE_FF1 $end
$var reg 1 J" IntE_FF2 $end
$var reg 1 K" NMICycle $end
$var reg 1 L" NMI_s $end
$var reg 1 M" NextIs_XY_Fetch $end
$var reg 1 N" No_BTR $end
$var reg 1 O" Oldnmi_n $end
$var reg 16 P" PC [15:0] $end
$var reg 16 Q" PC16 [15:0] $end
$var reg 16 R" PC16_B [15:0] $end
$var reg 3 S" Pre_XY_F_M [2:0] $end
$var reg 1 T" PreserveC_r $end
$var reg 8 U" R [7:0] $end
$var reg 5 V" Read_To_Reg_r [4:0] $end
$var reg 3 W" RegAddrA [2:0] $end
$var reg 3 X" RegAddrA_r [2:0] $end
$var reg 3 Y" RegAddrB [2:0] $end
$var reg 3 Z" RegAddrB_r [2:0] $end
$var reg 3 [" RegAddrC [2:0] $end
$var reg 16 \" RegBusA_r [15:0] $end
$var reg 8 ]" RegDIH [7:0] $end
$var reg 8 ^" RegDIL [7:0] $end
$var reg 1 _" RegWEH $end
$var reg 1 `" RegWEL $end
$var reg 16 a" SP [15:0] $end
$var reg 16 b" SP16 [15:0] $end
$var reg 16 c" SP16_A [15:0] $end
$var reg 16 d" SP16_B [15:0] $end
$var reg 1 e" Save_ALU_r $end
$var reg 8 f" Save_Mux [7:0] $end
$var reg 1 g" T_Res $end
$var reg 16 h" TmpAddr [15:0] $end
$var reg 1 i" XY_Ind $end
$var reg 2 j" XY_State [1:0] $end
$var reg 1 k" Z16_r $end
$var reg 1 , busak_n $end
$var reg 8 l" dout [7:0] $end
$var reg 1 ) halt_n $end
$var reg 1 ? intcycle_n $end
$var reg 1 > iorq $end
$var reg 1 m" last_mcycle $end
$var reg 1 n" last_tstate $end
$var reg 1 ' m1_n $end
$var reg 7 o" mc [6:0] $end
$var reg 7 p" mcycle [6:0] $end
$var reg 3 q" mcycles [2:0] $end
$var reg 1 r" rfsh_n_r $end
$var reg 1 s" stop $end
$var reg 7 t" ts [6:0] $end
$var reg 7 u" tstate [6:0] $end
$scope function mcyc_to_number $end
$var reg 7 v" mcyc [6:0] $end
$upscope $end
$scope function number_to_bitvec $end
$var reg 3 w" num [2:0] $end
$upscope $end
$scope module i_alu $end
$var wire 4 x" ALU_Op [3:0] $end
$var wire 1 2" Arith16 $end
$var wire 8 y" BusA [7:0] $end
$var wire 8 z" BusB [7:0] $end
$var wire 8 {" F_In [7:0] $end
$var wire 6 |" IR [5:0] $end
$var wire 2 }" ISet [1:0] $end
$var wire 1 k" Z16 $end
$var parameter 32 ~" Flag_C $end
$var parameter 32 !# Flag_H $end
$var parameter 32 "# Flag_N $end
$var parameter 32 ## Flag_P $end
$var parameter 32 $# Flag_S $end
$var parameter 32 %# Flag_X $end
$var parameter 32 &# Flag_Y $end
$var parameter 32 '# Flag_Z $end
$var parameter 32 (# Mode $end
$var reg 8 )# BitMask [7:0] $end
$var reg 1 *# Carry7_v $end
$var reg 1 +# Carry_v $end
$var reg 9 ,# DAA_Q [8:0] $end
$var reg 8 -# F_Out [7:0] $end
$var reg 1 .# HalfCarry_v $end
$var reg 1 /# OverFlow_v $end
$var reg 8 0# Q [7:0] $end
$var reg 8 1# Q_t [7:0] $end
$var reg 8 2# Q_v [7:0] $end
$var reg 1 3# UseCarry $end
$scope function AddSub1 $end
$var reg 1 4# A $end
$var reg 1 5# B $end
$var reg 1 6# Carry_In $end
$var reg 1 7# Sub $end
$upscope $end
$scope function AddSub3 $end
$var reg 3 8# A [2:0] $end
$var reg 3 9# B [2:0] $end
$var reg 1 :# Carry_In $end
$var reg 1 ;# Sub $end
$upscope $end
$scope function AddSub4 $end
$var reg 4 <# A [3:0] $end
$var reg 4 =# B [3:0] $end
$var reg 1 ># Carry_In $end
$var reg 1 ?# Sub $end
$upscope $end
$upscope $end
$scope module mcode $end
$var wire 8 @# F [7:0] $end
$var wire 1 G" INTCycle $end
$var wire 8 A# IR [7:0] $end
$var wire 2 B# ISet [1:0] $end
$var wire 7 C# MCycle [6:0] $end
$var wire 1 K" NMICycle $end
$var wire 1 i" XY_Ind $end
$var wire 3 D# w_cc [2:0] $end
$var wire 1 E# f_cc_true $end
$var wire 3 F# SSS [2:0] $end
$var wire 2 G# DPAIR [1:0] $end
$var wire 3 H# DDD [2:0] $end
$var parameter 32 I# Flag_C $end
$var parameter 32 J# Flag_H $end
$var parameter 32 K# Flag_N $end
$var parameter 32 L# Flag_P $end
$var parameter 32 M# Flag_S $end
$var parameter 32 N# Flag_X $end
$var parameter 32 O# Flag_Y $end
$var parameter 32 P# Flag_Z $end
$var parameter 32 Q# Mode $end
$var parameter 3 R# aBC $end
$var parameter 3 S# aDE $end
$var parameter 3 T# aIOA $end
$var parameter 3 U# aNone $end
$var parameter 3 V# aSP $end
$var parameter 3 W# aXY $end
$var parameter 3 X# aZI $end
$var reg 4 Y# ALU_Op [3:0] $end
$var reg 1 w Arith16 $end
$var reg 1 v Call $end
$var reg 1 u ExchangeAF $end
$var reg 1 t ExchangeDH $end
$var reg 1 s ExchangeRS $end
$var reg 1 r ExchangeRp $end
$var reg 1 q Extra_Reg_Save $end
$var reg 1 o Halt $end
$var reg 2 Z# IMode [1:0] $end
$var reg 1 J IORQ $end
$var reg 1 m I_BC $end
$var reg 1 l I_BT $end
$var reg 1 k I_BTR $end
$var reg 1 j I_CCF $end
$var reg 1 i I_CPL $end
$var reg 1 h I_DJNZ $end
$var reg 1 g I_INRC $end
$var reg 1 f I_RETN $end
$var reg 1 e I_RLD $end
$var reg 1 d I_RRD $end
$var reg 1 c I_SCF $end
$var reg 4 [# IncDec_16 [3:0] $end
$var reg 1 a Inc_PC $end
$var reg 1 ` Inc_WZ $end
$var reg 1 _ Jump $end
$var reg 1 ^ JumpE $end
$var reg 1 ] JumpXY $end
$var reg 1 \ LDSPHL $end
$var reg 1 [ LDW $end
$var reg 1 Z LDZ $end
$var reg 3 \# MCycles [2:0] $end
$var reg 1 < NoRead $end
$var reg 2 ]# Prefix [1:0] $end
$var reg 1 X PreserveC $end
$var reg 1 W Read_To_Acc $end
$var reg 1 V Read_To_Reg $end
$var reg 1 R RstP $end
$var reg 1 Q Save_ALU $end
$var reg 1 P SetDI $end
$var reg 1 O SetEI $end
$var reg 3 ^# Set_Addr_To [2:0] $end
$var reg 4 _# Set_BusA_To [3:0] $end
$var reg 4 `# Set_BusB_To [3:0] $end
$var reg 3 a# Special_LD [2:0] $end
$var reg 3 b# TStates [2:0] $end
$var reg 1 : Write $end
$scope begin default_ed_block $end
$upscope $end
$scope begin handle_prefixes $end
$upscope $end
$upscope $end
$scope module regs $end
$var wire 3 c# AddrA [2:0] $end
$var wire 3 d# AddrB [2:0] $end
$var wire 3 e# AddrC [2:0] $end
$var wire 8 f# B [7:0] $end
$var wire 8 g# C [7:0] $end
$var wire 1 ;" CEN $end
$var wire 8 h# D [7:0] $end
$var wire 8 i# DIH [7:0] $end
$var wire 8 j# DIL [7:0] $end
$var wire 8 k# DOAH [7:0] $end
$var wire 8 l# DOAL [7:0] $end
$var wire 8 m# DOBH [7:0] $end
$var wire 8 n# DOBL [7:0] $end
$var wire 8 o# DOCH [7:0] $end
$var wire 8 p# DOCL [7:0] $end
$var wire 8 q# E [7:0] $end
$var wire 8 r# H [7:0] $end
$var wire 8 s# L [7:0] $end
$var wire 1 _" WEH $end
$var wire 1 `" WEL $end
$var wire 1 ! clk $end
$var wire 16 t# IY [15:0] $end
$var wire 16 u# IX [15:0] $end
$var wire 16 v# HLp [15:0] $end
$var wire 16 w# HL [15:0] $end
$var wire 16 x# DEp [15:0] $end
$var wire 16 y# DE [15:0] $end
$var wire 16 z# BCp [15:0] $end
$var wire 16 {# BC [15:0] $end
$upscope $end
$scope begin sync_inputs $end
$upscope $end
$upscope $end
$upscope $end
$scope task ASSERT $end
$var reg 8 |# I [7:0] $end
$var reg 2 }# IFF [1:0] $end
$var reg 8 ~# R [7:0] $end
$var reg 192 !$ REGS [191:0] $end
$var reg 1 "$ alt $end
$upscope $end
$scope task SETUP $end
$var reg 8 #$ I [7:0] $end
$var reg 2 $$ IFF [1:0] $end
$var reg 8 %$ R [7:0] $end
$var reg 192 &$ REGS [191:0] $end
$var reg 1 '$ alt $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 X#
b10 W#
b101 V#
b111 U#
b100 T#
b1 S#
b0 R#
b0 Q#
b110 P#
b101 O#
b11 N#
b111 M#
b10 L#
b1 K#
b100 J#
b0 I#
b0 (#
b110 '#
b101 &#
b11 %#
b111 $#
b10 ##
b1 "#
b100 !#
b0 ~"
b110 ,"
b10 +"
b101 *"
b111 )"
b100 ("
b1 '"
b0 &"
b0 %"
b1 $"
b110 #"
b101 ""
b11 !"
b111 ~
b10 }
b1 |
b100 {
b0 z
b1 D
b0 C
b1 B
$end
#0
$dumpvars
x'$
bx &$
bx %$
bx $$
bx #$
x"$
bx !$
bx ~#
bx }#
bx |#
bx {#
bx z#
bx y#
bx x#
bx w#
bx v#
bx u#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
bx k#
bx j#
bx i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
bx [#
bx Z#
bx Y#
bx H#
bx G#
bx F#
xE#
bx D#
bx C#
bx B#
bx A#
bx @#
x?#
x>#
bx =#
bx <#
x;#
x:#
bx 9#
bx 8#
x7#
x6#
x5#
x4#
x3#
bx 2#
bx 1#
bx 0#
x/#
x.#
bx -#
bx ,#
x+#
x*#
bx )#
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
xs"
1r"
bx q"
bx p"
bx o"
xn"
xm"
bx l"
xk"
bx j"
xi"
bx h"
0g"
bx f"
xe"
bx d"
bx c"
bx b"
bx a"
0`"
0_"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
xT"
bx S"
bx R"
bx Q"
bx P"
xO"
xN"
0M"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
bx E"
bx D"
bx C"
xB"
bx A"
bx @"
x?"
bx >"
bx ="
bx <"
x;"
x:"
bx 9"
x8"
bx 7"
x6"
x5"
x4"
x3"
x2"
bx 1"
x0"
bx /"
bx ."
bx -"
bx y
bx x
xw
xv
xu
xt
xs
xr
xq
bx p
xo
bx n
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
bx b
xa
x`
x_
x^
x]
x\
x[
xZ
bx Y
xX
xW
xV
bx U
bx T
bx S
xR
xQ
xP
xO
bx N
bx M
bx L
bx K
xJ
bx I
bx H
bx G
bx F
bx E
bx A
bx @
x?
x>
bx =
x<
bx ;
x:
19
18
17
bx 6
15
14
bx 3
bx 2
11
00
bx /
0.
bx -
x,
bx +
bx *
x)
1(
x'
1&
1%
1$
1#
1"
0!
$end
#5
0s"
0>
0n"
0:
0<
0o
b11 n
b11 Z#
0O
0P
0g
0d
0e
0k
0m
0l
0f
0c
0j
0i
0h
0s
0u
0r
0t
b0 K
b0 a#
0\
0[
0Z
0R
0v
0]
0^
0_
b111 N
b111 ^#
0J
0w
0X
0Q
b0 y
b0 Y#
b0 M
b0 _#
b0 L
b0 `#
0q
0V
0W
b0 b
b0 [#
0`
0a
b100 H
b100 b#
b1 I
b1 \#
0E#
b0 ^"
b0 j#
b0 ]"
b0 i#
07#
0;#
0?#
0>#
03#
b1 )#
bx0xxxx0x p
bx0xxxx0x -#
b0 |"
b0 Y
b0 ]#
b0 D#
b0 H#
b0 F#
b0 G#
b0 b"
b1 Q"
b1 d"
b1111111111111111 c"
b1 R"
b0 f"
1;"
03"
0H"
1?
1,
1)
b0 <"
b1 ;
b1 t"
b1 =
b1 o"
0O"
0L"
0B"
0:"
0i"
0T"
0e"
b0 /"
b0 x"
0k"
06"
02"
b0 V"
00"
b1111111111111111 a"
b0 U"
b0 @"
b11111111 >"
b11111111 1"
b11111111 ="
b11111111 {"
b11111111 @#
b11111111 ."
b0 *
b0 @
b0 l"
b0 q"
b0 E"
b0 j"
b0 D"
b0 }"
b0 B#
b0 C"
b0 A#
b0 h"
b0 -
b0 A
b0 -"
b0 P"
1'
05"
04"
0N"
0J"
0I"
0G"
0K"
08"
0?"
b0 S"
b1 u"
b1 p"
b1 C#
b0 E
b0 F
1!
10
#10
0!
00
#15
b0 Y"
b0 d#
b0 W"
b0 c#
b11 ["
b11 e#
b0 Z"
b0 X"
1!
10
#20
0!
00
#25
1!
10
#30
0!
00
0"
01
#35
b11110100 x
b11110100 0#
b11110100 1#
0/#
1+#
14#
15#
16#
1*#
b111 8#
b111 9#
1:#
1.#
b11110100 2#
b1010 <#
b1010 =#
b10 ;
b10 t"
1m"
b11111010 7"
b11111010 y"
b11111010 9"
b11111010 z"
b1111101011010100 \"
1O"
0'
b10 u"
b1 q"
1E#
b1 b"
b1111101011010101 A"
b0 c"
b10110001 p
b10110001 -#
1!
10
b0 a"
b10001001100111 t#
b1000111 p#
b111010001000111 S
b1110100 o#
b111010001000111 u#
b0 v#
b0 x#
b0 z#
b1010011 s#
b10011100 r#
b1001110001010011 w#
b1001011 q#
b11111010 h#
b1111101001001011 y#
b11010100 l#
b11010100 n#
b11010100 g#
b1111101011010100 U
b11111010 k#
b1111101011010100 T
b11111010 m#
b11111010 f#
b1111101011010100 {#
b0 >"
b0 1"
b10100111 ="
b10100111 {"
b10100111 @#
b11110101 ."
0'$
b0 $$
b0 %$
b0 #$
b111101011010011111111010110101001111101001001011100111000101001100000000000000000000000000000000000000000000000000000000000000000111010001000111001000100110011100000000000000000000000000000000 &$
#40
b11011101 +
b11011101 6
b11011101 G
b11011101 3
0!
00
#45
b100 ;
b100 t"
b11111010 *
b11111010 @
b11111010 l"
b100 u"
0&
0%
1!
10
#50
0!
00
#55
b11 y
b11 Y#
b11011101 ^"
b11011101 j#
b11011101 ]"
b11011101 i#
b11011101 f"
b10110001 p
b10110001 -#
b11110100 1#
b1000 )#
b11011101 <"
b1000 ;
b1000 t"
b11101 |"
b11 Y
b11 ]#
b11 D#
b11 H#
b101 F#
b1 G#
b111010000100100 b"
b10 Q"
b1111111111011101 d"
b111010001000111 c"
b11011101 E
b11011101 F
1&
1%
b1000 u"
1'
0$
0r"
b11011101 C"
b11011101 A#
b1 P"
b1 U"
1!
10
#60
0!
00
#65
1g"
b1 b"
b1 d"
b0 c"
b10000 ;
b10000 t"
1n"
b10000 u"
0&
1!
10
#70
0!
00
#75
0g"
b10 ;
b10 t"
0n"
b11111111 x
b11111111 0#
b10111011 p
b10111011 -#
b11111111 1#
0+#
17#
06#
0*#
1;#
0:#
0.#
b11111111 2#
1?#
13#
1&
0'
b10 u"
1$
1r"
b11 /"
b11 x"
b1 -
b1 A
b1 -"
1!
10
#80
b11001011 +
b11001011 6
b11001011 G
b11001011 3
0!
00
#85
b11110100 x
b11110100 0#
b10110001 p
b10110001 -#
b11110100 1#
1+#
07#
16#
1*#
0;#
1:#
1.#
b11110100 2#
0?#
03#
b100 ;
b100 t"
b0 /"
b0 x"
b100 u"
0&
0%
1!
10
#90
0!
00
#95
b1 y
b1 Y#
b11001011 ^"
b11001011 j#
b11001011 ]"
b11001011 i#
0E#
b11001011 f"
b10110001 p
b10110001 -#
b11110100 1#
b10 )#
b11001011 <"
b1000 ;
b1000 t"
b1011 |"
b1 Y
b1 ]#
b1 D#
b1 H#
b11 F#
b0 G#
1M"
b111010000010010 b"
b11 Q"
b1111111111001011 d"
b111010001000111 c"
b11001011 E
b11001011 F
1&
1%
b1000 u"
1'
0$
0r"
b1 j"
b11001011 C"
b11001011 A#
b10 P"
b10 U"
1!
10
#100
0!
00
#105
1g"
b1 b"
b1 d"
b0 c"
b10000 ;
b10000 t"
1n"
b10000 u"
0&
1!
10
#110
0!
00
#115
1a
b11 H
b11 b#
0m"
0M"
0g"
b10 ;
b10 t"
b100000 =
b100000 o"
0n"
b11110101 x
b11110101 0#
b10110001 p
b10110001 -#
b11110101 1#
b11110101 2#
1>#
13#
1&
b1 S"
b100000 p"
b100000 C#
b10 u"
1$
1r"
b1 /"
b1 x"
b10 -
b10 A
b10 -"
b1 v"
1!
10
#120
b1010111 +
b1010111 6
b1010111 G
b1010111 3
0!
00
#125
b11 L
b11 `#
b11 M
b11 _#
1a
b0 Y
b0 ]#
b11110100 x
b11110100 0#
b10110001 p
b10110001 -#
b11110100 1#
b11110100 2#
0>#
03#
b100 ;
b100 t"
b1 D"
b1 }"
b1 B#
1i"
b0 /"
b0 x"
b100 u"
0&
0%
1!
10
#130
0!
00
#135
b1010111 ^"
b1010111 j#
b1010111 ]"
b1010111 i#
b1111101001001100 A"
b10101000 x
b10101000 0#
b10101001 p
b10101001 -#
b10101000 1#
b101 8#
b101 9#
0:#
0.#
b10101000 2#
b100 <#
b100 =#
b1010111 f"
1g"
b1010111 <"
b1000 ;
b1000 t"
b1111101001001011 T
b1001011 n#
b1 Y"
b1 d#
b1111101001001011 U
b1001011 l#
b1 W"
b1 c#
1n"
b111010010011110 b"
b100 Q"
b1010111 d"
b111010001000111 c"
b11010100 7"
b11010100 y"
b11010100 9"
b11010100 z"
b1 Z"
b1 X"
b1010111 E
b1010111 F
1&
1%
b1000 u"
b11 P"
1!
10
#140
0!
00
#145
b101 H
b101 b#
b11 M
b11 _#
b11 L
b11 `#
1a
b10010111 x
b10010111 0#
b10010100 p
b10010100 -#
b10010111 1#
1/#
0+#
04#
05#
b100 8#
b100 9#
1:#
1.#
b10010111 2#
b1011 <#
b1011 =#
1>#
13#
0g"
b1 b"
b1 d"
b0 c"
b10 ;
b10 t"
b1000000 =
b1000000 o"
0n"
b1111101001001011 \"
b1001011 7"
b1001011 y"
b1001011 9"
b1001011 z"
b11 V"
b111010010011110 h"
b1 /"
b1 x"
b11 -
b11 A
b11 -"
b1000000 p"
b1000000 C#
b10 u"
1!
10
#150
b1111 +
b1111 6
b1111 G
b1111 3
0!
00
#155
b1111101011010101 A"
b100 ;
b100 t"
b1111101011010100 U
b11010100 l#
b0 W"
b0 c#
b10010110 x
b10010110 0#
b10010100 p
b10010100 -#
b10010110 1#
b10010110 2#
0>#
03#
0&
0%
b100 u"
b1001011 *
b1001011 @
b1001011 l"
b0 V"
b0 /"
b0 x"
1!
10
#160
0!
00
#165
b10 N
b10 ^#
b11 I
b11 \#
b110 M
b110 _#
b111 L
b111 `#
1a
b101 H
b101 b#
b1111 ^"
b1111 j#
b1111 ]"
b1111 i#
b11111 x
b11111 0#
b1001 p
b1001 -#
b11111 1#
0/#
1+#
14#
b101 8#
0:#
0.#
b11111 2#
b100 <#
b1111 |"
b111 F#
b1111 f"
b111010001010110 b"
b101 Q"
b1111101001001100 A"
b1111 d"
b111010001000111 c"
b1111101001001011 U
b1001011 l#
b1 W"
b1 c#
b1111 <"
b1000 ;
b1000 t"
b1111101011010100 \"
b11010100 7"
b11010100 y"
b100 P"
b1111 C"
b1111 A#
b1000 u"
b1111 E
b1111 F
1&
1%
1!
10
#170
0!
00
#175
b100 x
b100 0#
b10001 p
b10001 -#
b100 1#
04#
15#
b0 8#
b111 9#
1:#
1.#
b100 2#
b1111 <#
b101 =#
b1 b"
b111010001001000 A"
b1 d"
b0 c"
b10000 ;
b10000 t"
b1110100 m#
b111010001000111 T
b1000111 n#
b11 Y"
b11 d#
b1110100 k#
b111010001000111 U
b1000111 l#
b11 W"
b11 c#
b1111 7"
b1111 y"
b11110101 9"
b11110101 z"
b1111101001001011 \"
b10011100 o#
b1001110001010011 S
b1010011 p#
b10 ["
b10 e#
b11 Z"
b11 X"
b10000 u"
b11 q"
1!
10
#180
0!
00
#185
1g"
b100000 ;
b100000 t"
1n"
b111010001000111 \"
b100000 u"
1!
10
#190
0!
00
#195
1Q
1V
b1000 y
b1000 Y#
b10 N
b10 ^#
b110 M
b110 _#
b111 L
b111 `#
0a
b100 H
b100 b#
b11 I
b11 \#
0g"
b10 ;
b10 t"
b10 =
b10 o"
0n"
b101 x
b101 0#
b10001 p
b10001 -#
b101 1#
b101 2#
1>#
13#
b10 p"
b10 C#
b10 u"
b110 V"
b1 /"
b1 x"
b111010010011110 -
b111010010011110 A
b111010010011110 -"
b10 w"
1!
10
#200
b11111000 +
b11111000 6
b11111000 G
b11111000 3
0!
00
#205
b100 x
b100 0#
b10001 p
b10001 -#
b100 1#
b100 2#
0>#
03#
b1111101011010101 A"
b100 ;
b100 t"
b11111010 k#
b1111101011010100 U
b11010100 l#
b0 W"
b0 c#
b11110101 *
b11110101 @
b11110101 l"
b0 V"
b0 /"
b0 x"
b100 u"
0&
0%
1!
10
#210
0!
00
#215
b11111000 ^"
b11111000 j#
b11111000 ]"
b11111000 i#
b11111000 f"
b1001110001001011 b"
b111010001001000 A"
b1111111111111000 d"
b1001110001010011 c"
b11111000 <"
b1000 ;
b1000 t"
b1110100 k#
b111010001000111 U
b1000111 l#
b11 W"
b11 c#
b1111101011010100 \"
b11111000 E
b11111000 F
1&
1%
b1000 u"
1!
10
#220
0!
00
#225
1g"
b11101101 x
b11101101 0#
b10101001 p
b10101001 -#
b11101101 1#
14#
b111 8#
0:#
0.#
b11101101 2#
b1000 <#
b1 b"
b1 d"
b0 c"
b10000 ;
b10000 t"
1n"
b111010001000111 \"
b11111000 7"
b11111000 y"
b10000 u"
1!
10
#230
0!
00
#235
1q
1:
b111 N
b111 ^#
0Q
b1 y
b1 Y#
b111 M
b111 _#
b111 L
b111 `#
1V
b11 H
b11 b#
b11 I
b11 \#
0g"
1m"
b10 ;
b10 t"
b100 =
b100 o"
b11110101 ^"
b11110101 j#
b11110101 ]"
b11110101 i#
0n"
b1111100 x
b1111100 0#
b101000 p
b101000 -#
b1111100 1#
b1111100 f"
b100 p"
b100 C#
b10 u"
b10110 V"
b1000 /"
b1000 x"
1e"
1!
10
#240
0!
00
#245
1:
b111 M
b111 _#
b111 L
b111 `#
1q
1V
b11 I
b11 \#
b11111000 f"
b11101010 x
b11101010 0#
b10101001 p
b10101001 -#
b11101010 1#
b11101010 2#
b101 <#
b1111101011010101 A"
b100 ;
b100 t"
b1111100 ^"
b1111100 j#
b1111100 ]"
b1111100 i#
b11111010 k#
b1111101011010100 U
b11010100 l#
b0 W"
b0 c#
b1110100 o#
b111010001000111 S
b1000111 p#
b11 ["
b11 e#
b11110101 7"
b11110101 y"
b1111100 *
b1111100 @
b1111100 l"
b101000 ="
b101000 {"
b101000 @#
b0 V"
0e"
b0 /"
b0 x"
b100 u"
0&
0#
1!
10
#250
0!
00
#255
1g"
b111010000111111 b"
b111010001001000 A"
b1111111111111000 d"
b111010001000111 c"
b1000 ;
b1000 t"
b1111100 ^"
b1111100 j#
b1111100 ]"
b1111100 i#
b1110100 k#
b111010001000111 U
b1000111 l#
b11 W"
b11 c#
1n"
b1111101011010100 \"
1&
1#
b1000 u"
1!
10
#260
b1111100 +
b1111100 6
b1111100 G
b1111100 3
0!
00
#265
b10 N
b10 ^#
0:
b110 M
b110 _#
b111 L
b111 `#
0q
0V
b100 H
b100 b#
b11 I
b11 \#
b10101001 p
b10101001 -#
b11101010 1#
13#
0m"
0g"
b1 b"
b1 d"
b0 c"
b10 ;
b10 t"
b1 =
b1 o"
b11111000 ^"
b11111000 j#
b11111000 ]"
b11111000 i#
0n"
b111010001000111 \"
b10111 V"
b1 /"
b1 x"
b100 -
b100 A
b100 -"
b1 p"
b1 C#
0'
b10 u"
1!
10
#270
bx +
bx 6
bx G
bx 3
0!
00
#275
b1111101011010101 A"
b100 ;
b100 t"
b11111010 k#
b1111101011010100 U
b11010100 l#
b0 W"
b0 c#
b11101101 x
b11101101 0#
b10101001 p
b10101001 -#
b11101101 1#
b11101101 2#
b1000 <#
03#
b11111000 7"
b11111000 y"
b10011100 o#
b1001110001010011 S
b1010011 p#
b10 ["
b10 e#
0&
0%
b100 u"
b11111000 ."
b11110101 *
b11110101 @
b11110101 l"
b0 V"
b0 /"
b0 x"
1!
10
#280
0!
00
1.
0"$
b0 }#
b10 ~#
b0 |#
b11111000010100011111010110101001111101001001011100111000101001100000000000000000000000000000000000000000000000000000000000000000111010001000111001000100110011100000000000000000000000000000100 !$
